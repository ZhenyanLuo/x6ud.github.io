(this.webpackJsonp=this.webpackJsonp||[]).push([[4],{447:function(t,e,o){"use strict";o.r(e);var i=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"wrapper"},[o("div",{staticClass:"column condition",class:{collapsed:t.collapseSearchConditions}},[o("div",{staticClass:"inner-wrapper"},[o("h4",[t._v("Species:")]),t._v(" "),o("div",{staticClass:"row",staticStyle:{"margin-bottom":"8px"}},[o("a-spin",{staticStyle:{flex:"1 1","min-width":"0"},attrs:{spinning:t.loading}},[o("a-select",{staticStyle:{width:"100%"},attrs:{placeholder:"any","show-search":""},model:{value:t.keyword,callback:function(e){t.keyword=e},expression:"keyword"}},[o("a-select-option",{key:""},[t._v("any")]),t._v(" "),t._l(t.tags,(function(e){return o("a-select-option",{key:e},[t._v(t._s(e))])}))],2)],1),t._v(" "),o("a-button",{attrs:{type:"primary"},on:{click:t.search}},[t._v("Search")])],1),t._v(" "),o("h4",[t._v("Direction: (skull type does not affect search results)")]),t._v(" "),o("div",{staticClass:"row"},[o("a-select",{staticStyle:{width:"100%"},attrs:{"show-search":""},model:{value:t.model.url,callback:function(e){t.$set(t.model,"url",e)},expression:"model.url"}},t._l(t.models,(function(e){return o("a-select-option",{key:e.path,attrs:{value:e.path}},[t._v("\n                        "+t._s(e.name)+"\n                    ")])})),1)],1),t._v(" "),o("model-viewer",{attrs:{"model-url":t.model.url,"rotate-x":t.model.rotateX,"rotate-y":t.model.rotateY,"rotate-z":t.model.rotateZ,zoom:t.model.zoom,width:t.modelViewerSize,height:t.modelViewerSize},on:{"update:rotateX":function(e){return t.$set(t.model,"rotateX",e)},"update:rotate-x":function(e){return t.$set(t.model,"rotateX",e)},"update:rotateY":function(e){return t.$set(t.model,"rotateY",e)},"update:rotate-y":function(e){return t.$set(t.model,"rotateY",e)},"update:rotateZ":function(e){return t.$set(t.model,"rotateZ",e)},"update:rotate-z":function(e){return t.$set(t.model,"rotateZ",e)},"update:zoom":function(e){return t.$set(t.model,"zoom",e)}}},[t.modelAuthorLink?o("a",{staticStyle:{position:"absolute",right:"8px",top:"8px","line-height":"14px"},attrs:{target:"_blank",title:"Author of this model",href:t.modelAuthorLink}},[o("a-icon",{attrs:{type:"info-circle"}})],1):t._e()]),t._v(" "),o("div",{staticClass:"row"},[o("span",[t._v("X: "+t._s(t.model.rotateX)+"; Y: "+t._s(t.model.rotateY)+"; Z: ")]),t._v(" "),o("a-slider",{staticStyle:{flex:"1 1","min-width":"0"},attrs:{included:!1,min:-180,max:180},model:{value:t.model.rotateZ,callback:function(e){t.$set(t.model,"rotateZ",e)},expression:"model.rotateZ"}}),t._v(" "),o("div",[o("span",{staticStyle:{width:"2.5em","text-align":"center",display:"inline-block"}},[t._v(t._s(t.model.rotateZ))]),t._v(" "),o("a-button",{attrs:{size:"small"},on:{click:function(e){t.model.rotateX=t.model.rotateY=t.model.rotateZ=0}}},[t._v("\n                        Reset\n                    ")])],1)],1),t._v(" "),t._m(0)],1),t._v(" "),o("div",{staticClass:"collapse-handler",on:{click:function(e){t.collapseSearchConditions=!t.collapseSearchConditions}}},[o("a-icon",{staticClass:"icon",attrs:{type:"up"}})],1)]),t._v(" "),o("div",{staticClass:"column result"},[o("div",{staticClass:"list"},t._l(t.result,(function(e){return o("image-thumb",{key:e.url,staticClass:"item",attrs:{image:e,size:200},nativeOn:{click:function(o){return t.show(e)}}})})),1)]),t._v(" "),o("image-viewer",{attrs:{show:t.large.show,"image-url":t.large.imageUrl,flip:t.large.flip},on:{"update:show":function(e){return t.$set(t.large,"show",e)}}})],1)};i._withStripped=!0;var a=o(11),n=o(459),r=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("a-spin",{staticClass:"thumb",attrs:{spinning:t.loading}},[o("div",{staticClass:"thumb-inner-wrapper",class:{flip:this.image&&t.image.flip},style:{width:t.size+"px",height:t.size+"px"}},[t.image&&t.image.url?o("img",{style:t.imgStyle,attrs:{src:t.image.url,alt:""}}):t._e(),t._v(" "),t._t("default")],2)])};r._withStripped=!0;class s extends(a.a.extend({data:()=>({loading:!1,handlerRemoved:!1}),props:{image:Object,size:{type:Number,default:160}},computed:{imgStyle(){const t=this.image;if(!t||!t.url)return{};const e=1/t.cs*this.size;return{width:t.w*e+"px",height:t.h*e+"px",left:-t.cx*e+"px",top:-t.cy*e+"px"}}},mounted(){const t=this.parent=function t(e){if(null!=e)return e.scrollHeight>e.clientHeight?e:t(e.parentNode)}(this.$el);document.addEventListener("scroll",this.checkVisibilityChange,!1),document.addEventListener("resize",this.checkVisibilityChange,!1),null==t||t.addEventListener("scroll",this.checkVisibilityChange,!1),this.checkVisibilityChange()},methods:{checkVisibilityChange(){var t;if(function(t){const e=t.getBoundingClientRect(),o=e.right-e.left,i=e.bottom-e.top;return e.top>-i&&e.left>-o&&e.bottom<(window.innerHeight||document.documentElement.clientHeight)+i&&e.right<(window.innerWidth||document.documentElement.clientWidth)+o}(this.$el)){this.loading=!0;const e=new Image;e.onload=()=>{this.loading=!1},e.onerror=()=>{this.loading=!1},e.src=null===(t=this.image)||void 0===t?void 0:t.url,this.removeHandlers()}},removeHandlers(){var t;if(this.handlerRemoved)return;document.removeEventListener("scroll",this.checkVisibilityChange),document.removeEventListener("resize",this.checkVisibilityChange);null===(t=this.parent)||void 0===t||t.removeEventListener("scroll",this.checkVisibilityChange),this.handlerRemoved=!0}}})){}var l=s,c=(o(475),o(104)),d=Object(c.a)(l,r,[],!1,null,"3e22842a",null);d.options.__file="src/components/ImageThumb.vue";var h=d.exports,u=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"image-viewer-mask"},[t.show?o("div",{staticClass:"image-viewer",on:{click:function(e){return e.target!==e.currentTarget?null:t.close(e)}}},[o("img",{style:t.imgStyle,attrs:{src:t.imageUrl,alt:""}}),t._v(" "),o("div",{staticClass:"btn-close",on:{click:t.close}},[o("a-icon",{attrs:{type:"close"}})],1),t._v(" "),t.flickrAuthorLink?o("a-button",{staticClass:"btn-source",attrs:{size:"small"},on:{click:t.openAuthorLink}},[t._v("\n            Click here for more information about this picture\n        ")]):t._e()],1):t._e()])};u._withStripped=!0;var m=o(452);class p extends(a.a.extend({props:{show:Boolean,imageUrl:String,flip:{type:Boolean,default:!1}},data:()=>({width:0,height:0,zoom:1}),watch:{imageUrl(t){this.width=0,this.height=0,this.zoom=1;const e=new Image;e.onload=()=>{this.width=e.width,this.height=e.height;const t=.9*document.documentElement.clientWidth,o=.9*document.documentElement.clientHeight;this.zoom=Math.min(t/e.width,o/e.height,1)},e.src=t}},computed:{imgStyle(){return{"margin-left":-(this.width/2|0)+"px","margin-top":-(this.height/2|0)+"px",transform:`scaleX(${this.zoom*(this.flip?-1:1)}) scaleY(${this.zoom})`}},flickrAuthorLink(){return Object(m.b)(this.imageUrl)}},methods:{close(){this.$emit("update:show",!1)},openAuthorLink(){window.open(this.flickrAuthorLink)}}})){}var f=p,g=(o(494),Object(c.a)(f,u,[],!1,null,"5567e6cd",null));g.options.__file="src/components/ImageViewer.vue";var v=g.exports,b=o(457),w=o(458),k=function(t,e,o,i){return new(o||(o=Promise))((function(a,n){function r(t){try{l(i.next(t))}catch(t){n(t)}}function s(t){try{l(i.throw(t))}catch(t){n(t)}}function l(t){var e;t.done?a(t.value):(e=t.value,e instanceof o?e:new o((function(t){t(e)}))).then(r,s)}l((i=i.apply(t,e||[])).next())}))};class x extends(a.a.extend({components:{ModelViewer:n.a,ImageThumb:h,ImageViewer:v},data:()=>({loading:!1,modelViewerSize:360,models:w.a,data:[],model:{url:w.a[0].path,rotateX:0,rotateY:0,rotateZ:0,zoom:10},keyword:"",result:[],collapseSearchConditions:!1,large:{show:!1,imageUrl:"",flip:!1}}),computed:{tags(){const t={};return this.data.forEach(e=>e.tags.forEach(e=>{t[e]=!0})),Object.keys(t).sort()},modelAuthorLink(){var t;return(null===(t=this.models.find(t=>t.path===this.model.url))||void 0===t?void 0:t.origin)||""}},mounted(){return k(this,void 0,void 0,(function*(){try{this.loading=!0,this.data=(yield o.e(0).then(o.bind(null,502))).default}finally{this.loading=!1}}))},methods:{search(){let t=this.keyword?this.data.filter(t=>{var e;return null===(e=t.tags)||void 0===e?void 0:e.includes(this.keyword)}):this.data;const e=Object(b.a)(this.model.rotateX+180,this.model.rotateY+180,this.model.rotateZ+180),o=t.map(t=>{const o=t.ry*this.model.rotateY<0,i=t.rx,a=o?-t.ry:t.ry,n=o?-t.rz:t.rz,r=Object(b.b)(e,Object(b.a)(i+180,a+180,n+180));return Object.assign(Object.assign({},t),{flip:o,ry:a,rz:n,match:r})});o.sort((t,e)=>t.match-e.match),this.result=o.slice(0,Math.min(o.length,30)),this.collapseSearchConditions=!0},show(t){this.large.imageUrl=t.url,this.large.flip=t.flip,this.large.show=!0}}})){}var y=x,_=(o(496),Object(c.a)(y,i,[function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"info",staticStyle:{color:"#bfbfbf"}},[o("div",[t._v("Author: x6udpngx")]),t._v(" "),o("div",[t._v("\n                    Special Thanks: "),o("a",{attrs:{href:"https://github.com/xrabohrok",target:"_blank"}},[t._v("xrabohrok")]),t._v("\n                    - Thank you for helping improve this tool!\n                ")]),t._v(" "),o("div",[t._v("Latest update: 2021-03-12")]),t._v(" "),o("div",[o("a",{attrs:{href:"https://github.com/x6ud/x6ud.github.io/issues",target:"_blank"}},[t._v("Leave a message")])]),t._v(" "),o("div",[o("a",{attrs:{href:"https://github.com/x6ud/search-photos-by-model-tool",target:"_blank"}},[t._v("Source code")])]),t._v(" "),o("div",[o("span",[t._v("Support me:")]),t._v(" "),o("a",{attrs:{href:"https://ko-fi.com/x6udpngx",target:"_blank"}},[o("span",{staticStyle:{"vertical-align":"middle"}},[t._v("Ko-fi.com/x6udpngx")])])])])}],!1,null,"1a1d373c",null));_.options.__file="src/views/Search.vue";e.default=_.exports},451:function(t,e,o){var i=o(455);"string"==typeof i&&(i=[[t.i,i,""]]),i.locals&&(t.exports=i.locals);(0,o(450).default)("635b7542",i,!1,{})},452:function(t,e,o){"use strict";o.d(e,"a",(function(){return l})),o.d(e,"c",(function(){return c})),o.d(e,"d",(function(){return d})),o.d(e,"b",(function(){return h}));var i=o(456),a=o.n(i),n=function(t,e,o,i){return new(o||(o=Promise))((function(a,n){function r(t){try{l(i.next(t))}catch(t){n(t)}}function s(t){try{l(i.throw(t))}catch(t){n(t)}}function l(t){var e;t.done?a(t.value):(e=t.value,e instanceof o?e:new o((function(t){t(e)}))).then(r,s)}l((i=i.apply(t,e||[])).next())}))};function r(t,e,o,i){return`https://farm${t}.static.flickr.com/${e}/${o}_${i}`}function s(t){const e=t.match(/farm([0-9]+)\.static\.flickr\.com\/([0-9]+)\/([0-9]+)_([0-9a-z]+)/);return e?{farm:Number(e[1]),server:e[2],id:e[3],secret:e[4]}:null}function l(t,e,o,i){return n(this,void 0,void 0,(function*(){const n="https://api.flickr.com/services/rest/?"+new URLSearchParams({method:"flickr.photos.search",api_key:t,format:"json",nojsoncallback:"1",license:"2,3,4,5,6,9",privacy_filter:"1",content_type:"1",text:e,sort:"relevance",per_page:Math.max(1,Math.min(500,o))+"",page:i+""}).toString(),s=(yield a.a.create().get(n)).data;if("ok"!==s.stat)throw new Error("Request failed");const l=s.photos.photo;return{page:s.photos.page,pages:s.photos.pages,perPage:s.photos.perpage,total:Number(s.photos.total),photos:l.map(t=>{const e=r(t.farm,t.server,t.id,t.secret);return{id:t.id,thumb:e+"_t.jpg",medium:e+".jpg",large:e+"_b.jpg"}})}}))}function c(t){const e=s(t);return e&&e.id}function d(t){const e=s(t);return e?r(e.farm,e.server,e.id,e.secret)+"_t.jpg":t}function h(t){const e=s(t);return e?"https://www.flickr.com/photo.gne?id="+e.id:null}},454:function(t,e,o){"use strict";o(451)},455:function(t,e,o){(e=o(21)(!1)).push([t.i,".model-viewer[data-v-4ef7cf1b]{position:relative}.model-viewer canvas[data-v-4ef7cf1b]{cursor:grab}\n",""]),t.exports=e},457:function(t,e,o){"use strict";o.d(e,"a",(function(){return a})),o.d(e,"b",(function(){return n}));const i=1/180*Math.PI;function a(t,e,o){return function(t,e,o){const i=Math.cos(.5*t),a=Math.sin(.5*t),n=Math.cos(.5*e),r=Math.sin(.5*e),s=Math.cos(.5*o),l=Math.sin(.5*o);return{x:i*n*s+a*r*l,y:i*n*l-a*r*s,z:a*n*l+i*r*s,w:a*n*s-i*r*l}}(o*i,e*i,t*i)}function n(t,e){const o=t.x*e.x+t.y*e.y+t.z*e.z+t.w*e.w;return 1-o*o}},458:function(t,e,o){"use strict";e.a=[{name:"Wolf Skull (for canis)",path:"./static/models/wolf-skull.obj",origin:"https://sketchfab.com/osuecampus"},{name:"Hyena Skull",path:"./static/models/hyena-skull.obj",origin:"https://www.myminifactory.com/users/Digimorph"},{name:"Lion Skull (for big cats)",path:"./static/models/lion-skull.obj",origin:"https://sketchfab.com/aucklandmuseum"},{name:"Cat Skull (for small cats)",path:"./static/models/cat-skull.obj",origin:"https://sketchfab.com/openededinburgh"},{name:"Bear Skull",path:"./static/models/bear-skull.obj",origin:"https://sketchfab.com/geoffreymarchal"},{name:"Raccoon Skull",path:"./static/models/raccoon-skull.obj",origin:"https://sketchfab.com/3d-models/raccoon-skull-4bec9f17661542269bfe2f66ebe42361"},{name:"Skunk Skull",path:"./static/models/skunk-skull.obj",origin:"https://sketchfab.com/3d-models/skunk-skull-c82f5ecc8b5445828619cc6e8aea7457"},{name:"River Otter Skull",path:"./static/models/river-otter-skull.obj",origin:"https://sketchfab.com/3d-models/river-otter-skull-c17e2cd117714da7a3592c1f13ec64ac"},{name:"Opossum Skull",path:"./static/models/opossum-skull.obj",origin:"https://www.thingiverse.com/Spfaff1994/designs"},{name:"Kangaroo Skull",path:"./static/models/kangaroo-skull.obj",origin:"https://sketchfab.com/3d-models/kangaroowallaby-skull-62a3f3fc37064f8cb0eb839f7d03e70f"},{name:"Horse Skull",path:"./static/models/horse-skull.obj",origin:"https://sketchfab.com/openededinburgh"},{name:"Cow Skull",path:"./static/models/cow-skull.obj",origin:"https://sketchfab.com/bencva"},{name:"Sheep Skull",path:"./static/models/sheep-skull.obj",origin:"https://sketchfab.com/victorzug"},{name:"Mule Deer Skull",path:"./static/models/mule-deer-skull.obj",origin:"https://sketchfab.com/uviclib"},{name:"Elephant Skull",path:"./static/models/elephant-skull.obj",origin:"https://sketchfab.com/3d-models/african-forest-elephant-for-mobile-devices-320fd7ff1d7e450189333dc270cf12ae"},{name:"Rhino Skull",path:"./static/models/rhino-skull.obj",origin:"https://sketchfab.com/3d-models/rhinoceros-skull-dbee4f8f32fd4a96b5a021137dd4e2c6"},{name:"Pig Skull",path:"./static/models/pig-skull.obj",origin:"https://sketchfab.com/geoffreymarchal"},{name:"Rat Skull",path:"./static/models/rat-skull.obj",origin:"https://www.thingiverse.com/scienceminer/about"},{name:"Squirrel Skull",path:"./static/models/squirrel-skull.obj",origin:"https://sketchfab.com/3d-models/imnh-r-80-squirrel-cranium-a624d77bbfaa4c66957c78ce4ffe58d2"},{name:"Rabbit Skull",path:"./static/models/rabbit-skull.obj",origin:"https://sketchfab.com/agancz"},{name:"Bat Skull",path:"./static/models/bat-skull.obj",origin:"https://sketchfab.com/uod_museums"},{name:"Chicken Skull (for birds)",path:"./static/models/chicken-skull.obj",origin:"https://sketchfab.com/misterdevious"},{name:"Crocodile Skull",path:"./static/models/crocodile-skull.obj",origin:"https://cults3d.com/en/users/MadScientist3D/creations"},{name:"Alligator Skull",path:"./static/models/alligator-skull.obj",origin:"https://sketchfab.com/neometrixtech"},{name:"Iguana Skull (for lizards)",path:"./static/models/iguana-skull.obj",origin:"https://sketchfab.com/3d-models/green-iguana-skull-ouvc-10677-1427f887e0fd41eb9c9c97e07c3610e3"},{name:"Frog Skull",path:"./static/models/frog-skull.obj",origin:"https://sketchfab.com/3d-models/frog-skull-9c491d45c73e49df8cd4277d3dc44ade"},{name:"Python Skull",path:"./static/models/python-skull.obj",origin:"https://www.tinkercad.com/things/aTogRekErps-python-skull-for-dr-close"},{name:"Dolphin Skull",path:"./static/models/dolphin-skull.obj",origin:"https://sketchfab.com/geoffreymarchal"},{name:"Human Skull",path:"./static/models/human-skull.obj",origin:"https://sketchfab.com/martinjario"}]},459:function(t,e,o){"use strict";var i=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("a-spin",{staticClass:"model-viewer",style:{width:t.width+"px",height:t.height+"px"},attrs:{spinning:t.loading}},[o("canvas",{ref:"canvas",attrs:{width:t.width,height:t.height},on:{contextmenu:function(t){t.preventDefault()},mousedown:t.dragStart,mousemove:t.dragMove,mousewheel:t.mouseWheel,"&touchstart":function(e){return t.dragStart(e)},"&touchmove":function(e){return t.dragMove(e)}}}),t._v(" "),t._t("default")],2)};i._withStripped=!0;var a=o(11),n=o(453),r=o(460),s=function(t,e,o,i){return new(o||(o=Promise))((function(a,n){function r(t){try{l(i.next(t))}catch(t){n(t)}}function s(t){try{l(i.throw(t))}catch(t){n(t)}}function l(t){var e;t.done?a(t.value):(e=t.value,e instanceof o?e:new o((function(t){t(e)}))).then(r,s)}l((i=i.apply(t,e||[])).next())}))};const l=1/180*Math.PI;class c extends(a.a.extend({props:{width:{type:Number,default:420},height:{type:Number,default:420},preferSize:{type:Number,default:6.5},zoom:{type:Number},rotateX:{type:Number},rotateY:{type:Number},rotateZ:{type:Number},clearColor:{type:Number,default:15921906},modelUrl:String},watch:{modelUrl(){this.loadModel()},rotateX(t){const e=this.model;e&&(e.rotation.x=t*l)},rotateY(t){const e=this.model;e&&(e.rotation.y=t*l)},rotateZ(t){const e=this.model;e&&(e.rotation.z=t*l)},zoom(t){const e=this.camera;e&&(e.position.z=20-t)}},data:()=>({loading:!1,dragging:!1,dragStartX:0,dragStartY:0}),mounted(){(this.renderer=new n.s({canvas:this.$refs.canvas})).setClearColor(this.clearColor);const t=this.scene=new n.q,e=this.camera=new n.n(45,this.width/this.height);e.position.set(0,0,20-this.zoom),e.lookAt(new n.r(0,0,0)),t.add(e);const o=new n.c(16777215);o.position.set(0,5,5),t.add(o);const i=setInterval(this.render,40);window.addEventListener("mouseup",this.dragStop),window.addEventListener("touchend",this.dragStop),this.$on("hook:beforeDestroy",()=>{clearInterval(i),window.removeEventListener("mouseup",this.dragStop),window.removeEventListener("touchend",this.dragStop)}),this.loader=new r.a,this.modelUrl&&this.loadModel()},methods:{loadOBJ(t){const e=this;return new Promise((o,i)=>{if(!e.loader)throw new Error("Not initialized");e.loader.load(t,o,void 0,i)})},loadModel(){return s(this,void 0,void 0,(function*(){try{this.loading=!0;const t=yield this.loadOBJ(this.modelUrl),e=this;e.model&&(e.scene.remove(e.model),e.model=void 0),t.traverse(t=>{if(t instanceof n.l){const e=t.material;e instanceof n.k?e.side=n.d:e.forEach(t=>{t.side=n.d})}});const o=t.children[0],i=(new n.a).setFromObject(t),a=new n.r;i.getCenter(a),o.position.set(-a.x,-a.y,-a.z);const r=new n.r;i.getSize(r);const s=this.preferSize/Math.max(r.x,r.y,r.z);o.scale.set(s,s,s),t.rotation.set(this.rotateX*l,this.rotateY*l,this.rotateZ*l),e.model=t,e.scene.add(t)}finally{this.loading=!1}}))},render(){this.renderer.render(this.scene,this.camera)},dragStart(t){this.dragging=!0,this.dragStartX=t.clientX||t.touches&&t.touches[0].clientX,this.dragStartY=t.clientY||t.touches&&t.touches[0].clientY},dragStop(){this.dragging=!1},dragMove(t){if(!this.dragging)return;const e=this.dragStartX,o=this.dragStartY,i=t.clientX||t.touches&&t.touches[0].clientX,a=t.clientY||t.touches&&t.touches[0].clientY,n=i-e,r=a-o;let s=this.rotateX,l=this.rotateY;this.dragStartX=i,this.dragStartY=a,s+=r,s<-180?s+=360:s>180&&(s-=360),l+=n,l<-180?l+=360:l>180&&(l-=360),this.$emit("update:rotateX",0|s),this.$emit("update:rotateY",0|l)},mouseWheel(t){const e=Math.max(-1,Math.min(1,-t.deltaY));this.$emit("update:zoom",Math.min(20,Math.max(0,this.zoom-e)))}}})){}var d=c,h=(o(454),o(104)),u=Object(h.a)(d,i,[],!1,null,"4ef7cf1b",null);u.options.__file="src/components/ModelViewer.vue";e.a=u.exports},461:function(t,e,o){var i=o(476);"string"==typeof i&&(i=[[t.i,i,""]]),i.locals&&(t.exports=i.locals);(0,o(450).default)("c88ea1a6",i,!1,{})},470:function(t,e,o){var i=o(495);"string"==typeof i&&(i=[[t.i,i,""]]),i.locals&&(t.exports=i.locals);(0,o(450).default)("12c11aff",i,!1,{})},471:function(t,e,o){var i=o(497);"string"==typeof i&&(i=[[t.i,i,""]]),i.locals&&(t.exports=i.locals);(0,o(450).default)("613e3fed",i,!1,{})},475:function(t,e,o){"use strict";o(461)},476:function(t,e,o){(e=o(21)(!1)).push([t.i,".thumb[data-v-3e22842a]{display:inline-block}.thumb .thumb-inner-wrapper[data-v-3e22842a]{position:relative;background-color:#f2f2f2;overflow:hidden}.thumb .thumb-inner-wrapper.flip[data-v-3e22842a]{transform:scale(-1, 1);transform-origin:50% 50%}.thumb .thumb-inner-wrapper img[data-v-3e22842a]{position:absolute}\n",""]),t.exports=e},494:function(t,e,o){"use strict";o(470)},495:function(t,e,o){(e=o(21)(!1)).push([t.i,".image-viewer-mask[data-v-5567e6cd]{position:fixed;z-index:1000;left:0;top:0;max-width:0;max-height:0}.image-viewer-mask .image-viewer[data-v-5567e6cd]{position:fixed;z-index:1000;left:0;top:0;right:0;bottom:0;background-color:rgba(0,0,0,0.35);overflow:hidden}.image-viewer-mask .image-viewer img[data-v-5567e6cd]{position:absolute;left:50%;top:50%;transform-origin:50% 50%}.image-viewer-mask .image-viewer .flickr-link[data-v-5567e6cd]{display:block;position:absolute;z-index:1;top:8px;right:48px;color:#fff;line-height:24px}.image-viewer-mask .image-viewer .flickr-link[data-v-5567e6cd]:hover{text-decoration:underline}.image-viewer-mask .image-viewer .btn-close[data-v-5567e6cd]{position:absolute;top:8px;right:8px;z-index:1;cursor:pointer;font-size:16px;color:#fff;width:24px;height:24px;line-height:24px;text-align:center;vertical-align:middle;border-radius:100%;background-color:rgba(0,0,0,0.35)}.image-viewer-mask .image-viewer .btn-source[data-v-5567e6cd]{position:absolute;top:8px;right:40px}\n",""]),t.exports=e},496:function(t,e,o){"use strict";o(471)},497:function(t,e,o){(e=o(21)(!1)).push([t.i,".wrapper[data-v-1a1d373c]{display:flex;align-items:flex-start;width:100%;height:100%;box-sizing:border-box;padding:10px}.wrapper .column[data-v-1a1d373c]{display:flex;flex-direction:column}.wrapper .column[data-v-1a1d373c]:not(:last-child){margin-right:10px}.wrapper .column .row[data-v-1a1d373c]{display:flex;width:100%;align-items:center}.wrapper .column .row[data-v-1a1d373c]:not(:last-child){margin-bottom:.5em}.wrapper .column .row>*[data-v-1a1d373c]:not(:last-child){min-width:0;margin-right:.5em}.wrapper .column.condition[data-v-1a1d373c]{flex:0 0 360px;width:360px}.wrapper .column.condition .inner-wrapper[data-v-1a1d373c]{display:flex;flex-direction:column;flex:1 1;min-height:0;width:100%}.wrapper .column.condition .collapse-handler[data-v-1a1d373c]{display:none}.wrapper .column.result[data-v-1a1d373c]{flex:1 1;min-width:0;height:100%}.wrapper .column.result .list[data-v-1a1d373c]{width:100%;height:100%;overflow-y:scroll;box-sizing:border-box;border:1px solid #d9d9d9;border-radius:4px;padding:10px}.wrapper .column.result .list .item[data-v-1a1d373c]{margin:5px;cursor:zoom-in}@media screen and (max-width: 480px){.wrapper[data-v-1a1d373c]{display:block !important;overflow:hidden;position:relative;box-sizing:border-box;width:100%;height:100%;padding:0 !important}.wrapper .column.condition[data-v-1a1d373c]{position:fixed;left:0;top:0;z-index:1;width:100%;height:100%;box-sizing:border-box;background-color:#fff;overflow:auto;transition:height .3s}.wrapper .column.condition .inner-wrapper[data-v-1a1d373c]{width:360px;margin:0 auto;padding:10px 0}.wrapper .column.condition .collapse-handler[data-v-1a1d373c]{display:block !important;position:fixed;left:50%;top:100%;width:48px;height:48px;margin:-24px 0 0 -24px;border-radius:100%;overflow:hidden;background-color:rgba(0,0,0,0.2);color:#fff;font-size:20px;text-align:center}.wrapper .column.condition .collapse-handler .icon[data-v-1a1d373c]{width:48px}.wrapper .column.condition.collapsed[data-v-1a1d373c]{height:0 !important}.wrapper .column.condition.collapsed .collapse-handler[data-v-1a1d373c]{top:0 !important}.wrapper .column.condition.collapsed .collapse-handler .icon[data-v-1a1d373c]{transform-origin:50% 50%;transform:rotate(180deg);margin-top:24px}}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvU2VhcmNoLnZ1ZT8xNmFmIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0ltYWdlVGh1bWIudnVlPzY4M2MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSW1hZ2VUaHVtYi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9JbWFnZVRodW1iLnRzPzkxNzAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSW1hZ2VUaHVtYi52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSW1hZ2VWaWV3ZXIudnVlP2NiMjYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSW1hZ2VWaWV3ZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSW1hZ2VWaWV3ZXIudHM/NDVmNiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9JbWFnZVZpZXdlci52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXdzL1NlYXJjaC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvU2VhcmNoLnRzPzRmYWQiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXdzL1NlYXJjaC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvTW9kZWxWaWV3ZXIudnVlP2MyZTAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL2ZsaWNrci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Nb2RlbFZpZXdlci52dWU/MzliNSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Nb2RlbFZpZXdlci52dWU/Y2FiMSIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvcXVhdGVybmlvbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbW9kZWxzLnRzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL01vZGVsVmlld2VyLnZ1ZT9iYWY4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL01vZGVsVmlld2VyLnRzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL01vZGVsVmlld2VyLnRzP2YwZjUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvTW9kZWxWaWV3ZXIudnVlIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0ltYWdlVGh1bWIudnVlPzYzNWQiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSW1hZ2VWaWV3ZXIudnVlPzRjYTIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXdzL1NlYXJjaC52dWU/MzMyYyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9JbWFnZVRodW1iLnZ1ZT8yMjliIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0ltYWdlVGh1bWIudnVlPzc2MGYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSW1hZ2VWaWV3ZXIudnVlPzAxOTQiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSW1hZ2VWaWV3ZXIudnVlP2I4NzciLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXdzL1NlYXJjaC52dWU/MDY2MSIsIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvU2VhcmNoLnZ1ZT9mYjcyIl0sIm5hbWVzIjpbInJlbmRlciIsIl92bSIsInRoaXMiLCJfaCIsIiRjcmVhdGVFbGVtZW50IiwiX2MiLCJfc2VsZiIsInN0YXRpY0NsYXNzIiwiY2xhc3MiLCJjb2xsYXBzZWQiLCJjb2xsYXBzZVNlYXJjaENvbmRpdGlvbnMiLCJfdiIsInN0YXRpY1N0eWxlIiwiZmxleCIsImF0dHJzIiwic3Bpbm5pbmciLCJsb2FkaW5nIiwid2lkdGgiLCJwbGFjZWhvbGRlciIsIm1vZGVsIiwidmFsdWUiLCJrZXl3b3JkIiwiY2FsbGJhY2siLCIkJHYiLCJleHByZXNzaW9uIiwia2V5IiwiX2wiLCJ0YWdzIiwidGFnIiwiX3MiLCJ0eXBlIiwib24iLCJjbGljayIsInNlYXJjaCIsInVybCIsIiRzZXQiLCJtb2RlbHMiLCJvcHRpb24iLCJwYXRoIiwibmFtZSIsInJvdGF0ZVgiLCJyb3RhdGVZIiwicm90YXRlWiIsInpvb20iLCJtb2RlbFZpZXdlclNpemUiLCJoZWlnaHQiLCIkZXZlbnQiLCJtb2RlbEF1dGhvckxpbmsiLCJwb3NpdGlvbiIsInJpZ2h0IiwidG9wIiwidGFyZ2V0IiwidGl0bGUiLCJocmVmIiwiX2UiLCJpbmNsdWRlZCIsIm1pbiIsIm1heCIsImRpc3BsYXkiLCJzaXplIiwiX20iLCJyZXN1bHQiLCJpdGVtIiwiaW1hZ2UiLCJuYXRpdmVPbiIsInNob3ciLCJsYXJnZSIsImltYWdlVXJsIiwiZmxpcCIsIl93aXRoU3RyaXBwZWQiLCJzdHlsZSIsImltZ1N0eWxlIiwic3JjIiwiYWx0IiwiX3QiLCJleHRlbmQiLCJkYXRhIiwiaGFuZGxlclJlbW92ZWQiLCJwcm9wcyIsIk9iamVjdCIsIk51bWJlciIsImRlZmF1bHQiLCJjb21wdXRlZCIsInNjYWxlIiwiY3MiLCJ3IiwiaCIsImxlZnQiLCJjeCIsImN5IiwicGFyZW50IiwiZ2V0U2Nyb2xsYWJsZVBhcmVudCIsIm5vZGUiLCJzY3JvbGxIZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJwYXJlbnROb2RlIiwiJGVsIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiY2hlY2tWaXNpYmlsaXR5Q2hhbmdlIiwibWV0aG9kcyIsImVsIiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImJvdHRvbSIsIndpbmRvdyIsImlubmVySGVpZ2h0IiwiZG9jdW1lbnRFbGVtZW50IiwiaW5uZXJXaWR0aCIsImNsaWVudFdpZHRoIiwiaXNFbGVtZW50SW5WaWV3cG9ydCIsIkltYWdlIiwib25sb2FkIiwib25lcnJvciIsInJlbW92ZUhhbmRsZXJzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImNvbXBvbmVudCIsIm9wdGlvbnMiLCJfX2ZpbGUiLCJjdXJyZW50VGFyZ2V0IiwiY2xvc2UiLCJmbGlja3JBdXRob3JMaW5rIiwib3BlbkF1dGhvckxpbmsiLCJCb29sZWFuIiwiU3RyaW5nIiwid2F0Y2giLCJtYXhXaWR0aCIsIm1heEhlaWdodCIsIk1hdGgiLCJ0cmFuc2Zvcm0iLCIkZW1pdCIsIm9wZW4iLCJjb21wb25lbnRzIiwiTW9kZWxWaWV3ZXIiLCJJbWFnZVRodW1iIiwiSW1hZ2VWaWV3ZXIiLCJtYXAiLCJmb3JFYWNoIiwicmVjb3JkIiwia2V5cyIsInNvcnQiLCJmaW5kIiwib3JpZ2luIiwiZmlsdGVyIiwiaW5jbHVkZXMiLCJkaXJlY3Rpb24iLCJyeSIsInJ4IiwicnoiLCJtYXRjaCIsImEiLCJiIiwic2xpY2UiLCJsZW5ndGgiLCJpbWciLCJjb2xvciIsImNvbnRlbnQiLCJtb2R1bGUiLCJpIiwibG9jYWxzIiwiZXhwb3J0cyIsImFkZCIsImdldEJhc2VJbWFnZVVybCIsImZhcm0iLCJzZXJ2ZXIiLCJpZCIsInNlY3JldCIsInBhcnNlRmxpY2tyVXJsIiwiZmxpY2tyU2VhcmNoIiwiYXBpS2V5Iiwia2V5d29yZHMiLCJwZXJQYWdlIiwicGFnZSIsImFwaVVybCIsIlVSTFNlYXJjaFBhcmFtcyIsIm1ldGhvZCIsImFwaV9rZXkiLCJmb3JtYXQiLCJub2pzb25jYWxsYmFjayIsImxpY2Vuc2UiLCJwcml2YWN5X2ZpbHRlciIsImNvbnRlbnRfdHlwZSIsInRleHQiLCJwZXJfcGFnZSIsInRvU3RyaW5nIiwiY3JlYXRlIiwiZ2V0Iiwic3RhdCIsIkVycm9yIiwicGhvdG9zIiwicGhvdG8iLCJwYWdlcyIsInBlcnBhZ2UiLCJ0b3RhbCIsImJhc2VVcmwiLCJ0aHVtYiIsIm1lZGl1bSIsImdldEZsaWNrcklkIiwiZ2V0RmxpY2tyVGh1bWIiLCJnZXRGbGlja3JBdXRob3JMaW5rIiwiX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIiwicHVzaCIsIkRFR18yX1JBRCIsIlBJIiwiZGVnRXVsZXJUb1F1YXRlcm5pb24iLCJ4IiwieSIsInoiLCJ5YXciLCJwaXRjaCIsInJvbGwiLCJjb3MiLCJzeSIsInNpbiIsImNwIiwic3AiLCJjciIsInNyIiwicXVhdGVybmlvbiIsImRpc3RhbmNlIiwicTEiLCJxMiIsInByb2QiLCJyZWYiLCJjb250ZXh0bWVudSIsInByZXZlbnREZWZhdWx0IiwibW91c2Vkb3duIiwiZHJhZ1N0YXJ0IiwibW91c2Vtb3ZlIiwiZHJhZ01vdmUiLCJtb3VzZXdoZWVsIiwibW91c2VXaGVlbCIsInByZWZlclNpemUiLCJjbGVhckNvbG9yIiwibW9kZWxVcmwiLCJsb2FkTW9kZWwiLCJ2YWwiLCJyb3RhdGlvbiIsImNhbWVyYSIsImRyYWdnaW5nIiwiZHJhZ1N0YXJ0WCIsImRyYWdTdGFydFkiLCJyZW5kZXJlciIsImNhbnZhcyIsIiRyZWZzIiwic2V0Q2xlYXJDb2xvciIsInNjZW5lIiwic2V0IiwibG9va0F0IiwibGlnaHQiLCJpaWQiLCJzZXRJbnRlcnZhbCIsImRyYWdTdG9wIiwiJG9uIiwiY2xlYXJJbnRlcnZhbCIsImxvYWRlciIsIk9CSkxvYWRlciIsIm1vZGVsVmlld2VyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJsb2FkIiwidW5kZWZpbmVkIiwiZ3JvdXAiLCJsb2FkT0JKIiwicmVtb3ZlIiwidHJhdmVyc2UiLCJvYmoiLCJtYXRlcmlhbCIsInNpZGUiLCJtZXNoIiwiY2hpbGRyZW4iLCJib3giLCJzZXRGcm9tT2JqZWN0IiwiY2VudGVyIiwiZ2V0Q2VudGVyIiwiZ2V0U2l6ZSIsImUiLCJjbGllbnRYIiwidG91Y2hlcyIsImNsaWVudFkiLCJ4MCIsInkwIiwieDEiLCJ5MSIsImR4IiwiZHkiLCJkZWx0YSIsImRlbHRhWSJdLCJtYXBwaW5ncyI6IjZGQUFBLElBQUlBLEVBQVMsV0FDWCxJQUFJQyxFQUFNQyxLQUNOQyxFQUFLRixFQUFJRyxlQUNUQyxFQUFLSixFQUFJSyxNQUFNRCxJQUFNRixFQUN6QixPQUFPRSxFQUNMLE1BQ0EsQ0FBRUUsWUFBYSxXQUNmLENBQ0VGLEVBQ0UsTUFDQSxDQUNFRSxZQUFhLG1CQUNiQyxNQUFPLENBQUVDLFVBQVdSLEVBQUlTLDJCQUUxQixDQUNFTCxFQUNFLE1BQ0EsQ0FBRUUsWUFBYSxpQkFDZixDQUNFRixFQUFHLEtBQU0sQ0FBQ0os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QyxLQUFLLENBQUM1QyxFQUFPQyxFQUFJLCtUQUFnVSxLQUV6VkQsRUFBT0csUUFBVUEsRyxpQ0NOakIsUSxxQkNFQUEsRUFEa0MsRUFBUSxHQUNoQ3dDLEVBQTRCLElBRTlCQyxLQUFLLENBQUM1QyxFQUFPQyxFQUFJLDgrQkFBKytCLEtBRXhnQ0QsRUFBT0csUUFBVUEsRyxpQ0NOakIsUSxxQkNFQUEsRUFEa0MsRUFBUSxHQUNoQ3dDLEVBQTRCLElBRTlCQyxLQUFLLENBQUM1QyxFQUFPQyxFQUFJLDhyRUFBK3JFLEtBRXh0RUQsRUFBT0csUUFBVUEiLCJmaWxlIjoiNC5tYWluLjUzZDBmNGNkYmExYTc3MGUzZDU4LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcbiAgICBcImRpdlwiLFxuICAgIHsgc3RhdGljQ2xhc3M6IFwid3JhcHBlclwiIH0sXG4gICAgW1xuICAgICAgX2MoXG4gICAgICAgIFwiZGl2XCIsXG4gICAgICAgIHtcbiAgICAgICAgICBzdGF0aWNDbGFzczogXCJjb2x1bW4gY29uZGl0aW9uXCIsXG4gICAgICAgICAgY2xhc3M6IHsgY29sbGFwc2VkOiBfdm0uY29sbGFwc2VTZWFyY2hDb25kaXRpb25zIH1cbiAgICAgICAgfSxcbiAgICAgICAgW1xuICAgICAgICAgIF9jKFxuICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiaW5uZXItd3JhcHBlclwiIH0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgIF9jKFwiaDRcIiwgW192bS5fdihcIlNwZWNpZXM6XCIpXSksXG4gICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJyb3dcIiwgc3RhdGljU3R5bGU6IHsgXCJtYXJnaW4tYm90dG9tXCI6IFwiOHB4XCIgfSB9LFxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICBcImEtc3BpblwiLFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgZmxleDogXCIxIDFcIiwgXCJtaW4td2lkdGhcIjogXCIwXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcGlubmluZzogX3ZtLmxvYWRpbmcgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICBcImEtc2VsZWN0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiBcIjEwMCVcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBwbGFjZWhvbGRlcjogXCJhbnlcIiwgXCJzaG93LXNlYXJjaFwiOiBcIlwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5rZXl3b3JkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5rZXl3b3JkID0gJCR2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImtleXdvcmRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImEtc2VsZWN0LW9wdGlvblwiLCB7IGtleTogXCJcIiB9LCBbX3ZtLl92KFwiYW55XCIpXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0udGFncywgZnVuY3Rpb24odGFnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKFwiYS1zZWxlY3Qtb3B0aW9uXCIsIHsga2V5OiB0YWcgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyh0YWcpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgMlxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgXCJhLWJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHR5cGU6IFwicHJpbWFyeVwiIH0sIG9uOiB7IGNsaWNrOiBfdm0uc2VhcmNoIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgW192bS5fdihcIlNlYXJjaFwiKV1cbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgX2MoXCJoNFwiLCBbXG4gICAgICAgICAgICAgICAgX3ZtLl92KFwiRGlyZWN0aW9uOiAoc2t1bGwgdHlwZSBkb2VzIG5vdCBhZmZlY3Qgc2VhcmNoIHJlc3VsdHMpXCIpXG4gICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwicm93XCIgfSxcbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgXCJhLXNlbGVjdFwiLFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6IFwiMTAwJVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgXCJzaG93LXNlYXJjaFwiOiBcIlwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ubW9kZWwudXJsLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0ubW9kZWwsIFwidXJsXCIsICQkdilcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcIm1vZGVsLnVybFwiXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLm1vZGVscywgZnVuY3Rpb24ob3B0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJhLXNlbGVjdC1vcHRpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHsga2V5OiBvcHRpb24ucGF0aCwgYXR0cnM6IHsgdmFsdWU6IG9wdGlvbi5wYXRoIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKG9wdGlvbi5uYW1lKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgXCJtb2RlbC12aWV3ZXJcIixcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICBcIm1vZGVsLXVybFwiOiBfdm0ubW9kZWwudXJsLFxuICAgICAgICAgICAgICAgICAgICBcInJvdGF0ZS14XCI6IF92bS5tb2RlbC5yb3RhdGVYLFxuICAgICAgICAgICAgICAgICAgICBcInJvdGF0ZS15XCI6IF92bS5tb2RlbC5yb3RhdGVZLFxuICAgICAgICAgICAgICAgICAgICBcInJvdGF0ZS16XCI6IF92bS5tb2RlbC5yb3RhdGVaLFxuICAgICAgICAgICAgICAgICAgICB6b29tOiBfdm0ubW9kZWwuem9vbSxcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IF92bS5tb2RlbFZpZXdlclNpemUsXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogX3ZtLm1vZGVsVmlld2VyU2l6ZVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgIFwidXBkYXRlOnJvdGF0ZVhcIjogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kc2V0KF92bS5tb2RlbCwgXCJyb3RhdGVYXCIsICRldmVudClcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJ1cGRhdGU6cm90YXRlLXhcIjogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kc2V0KF92bS5tb2RlbCwgXCJyb3RhdGVYXCIsICRldmVudClcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJ1cGRhdGU6cm90YXRlWVwiOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLiRzZXQoX3ZtLm1vZGVsLCBcInJvdGF0ZVlcIiwgJGV2ZW50KVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBcInVwZGF0ZTpyb3RhdGUteVwiOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLiRzZXQoX3ZtLm1vZGVsLCBcInJvdGF0ZVlcIiwgJGV2ZW50KVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBcInVwZGF0ZTpyb3RhdGVaXCI6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uJHNldChfdm0ubW9kZWwsIFwicm90YXRlWlwiLCAkZXZlbnQpXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwidXBkYXRlOnJvdGF0ZS16XCI6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uJHNldChfdm0ubW9kZWwsIFwicm90YXRlWlwiLCAkZXZlbnQpXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwidXBkYXRlOnpvb21cIjogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kc2V0KF92bS5tb2RlbCwgXCJ6b29tXCIsICRldmVudClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgX3ZtLm1vZGVsQXV0aG9yTGlua1xuICAgICAgICAgICAgICAgICAgICA/IF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJhXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodDogXCI4cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IFwiOHB4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsaW5lLWhlaWdodFwiOiBcIjE0cHhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogXCJBdXRob3Igb2YgdGhpcyBtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IF92bS5tb2RlbEF1dGhvckxpbmtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFtfYyhcImEtaWNvblwiLCB7IGF0dHJzOiB7IHR5cGU6IFwiaW5mby1jaXJjbGVcIiB9IH0pXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKClcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJyb3dcIiB9LFxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgIF9jKFwic3BhblwiLCBbXG4gICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICBcIlg6IFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0ubW9kZWwucm90YXRlWCkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgXCI7IFk6IFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0ubW9kZWwucm90YXRlWSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgXCI7IFo6IFwiXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgIF9jKFwiYS1zbGlkZXJcIiwge1xuICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBmbGV4OiBcIjEgMVwiLCBcIm1pbi13aWR0aFwiOiBcIjBcIiB9LFxuICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpbmNsdWRlZDogZmFsc2UsIG1pbjogLTE4MCwgbWF4OiAxODAgfSxcbiAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHtcbiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLm1vZGVsLnJvdGF0ZVosXG4gICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLm1vZGVsLCBcInJvdGF0ZVpcIiwgJCR2KVxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJtb2RlbC5yb3RhdGVaXCJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgIFwic3BhblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjIuNWVtXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ0ZXh0LWFsaWduXCI6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogXCJpbmxpbmUtYmxvY2tcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdihfdm0uX3MoX3ZtLm1vZGVsLnJvdGF0ZVopKV1cbiAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICBcImEtYnV0dG9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNpemU6IFwic21hbGxcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5tb2RlbC5yb3RhdGVYID0gX3ZtLm1vZGVsLnJvdGF0ZVkgPSBfdm0ubW9kZWwucm90YXRlWiA9IDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlc2V0XFxuICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgIF92bS5fbSgwKVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIDFcbiAgICAgICAgICApLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJjb2xsYXBzZS1oYW5kbGVyXCIsXG4gICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgX3ZtLmNvbGxhcHNlU2VhcmNoQ29uZGl0aW9ucyA9ICFfdm0uY29sbGFwc2VTZWFyY2hDb25kaXRpb25zXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgW19jKFwiYS1pY29uXCIsIHsgc3RhdGljQ2xhc3M6IFwiaWNvblwiLCBhdHRyczogeyB0eXBlOiBcInVwXCIgfSB9KV0sXG4gICAgICAgICAgICAxXG4gICAgICAgICAgKVxuICAgICAgICBdXG4gICAgICApLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiY29sdW1uIHJlc3VsdFwiIH0sIFtcbiAgICAgICAgX2MoXG4gICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImxpc3RcIiB9LFxuICAgICAgICAgIF92bS5fbChfdm0ucmVzdWx0LCBmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgICAgICByZXR1cm4gX2MoXCJpbWFnZS10aHVtYlwiLCB7XG4gICAgICAgICAgICAgIGtleTogaXRlbS51cmwsXG4gICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcIml0ZW1cIixcbiAgICAgICAgICAgICAgYXR0cnM6IHsgaW1hZ2U6IGl0ZW0sIHNpemU6IDIwMCB9LFxuICAgICAgICAgICAgICBuYXRpdmVPbjoge1xuICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uc2hvdyhpdGVtKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9KSxcbiAgICAgICAgICAxXG4gICAgICAgIClcbiAgICAgIF0pLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFwiaW1hZ2Utdmlld2VyXCIsIHtcbiAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICBzaG93OiBfdm0ubGFyZ2Uuc2hvdyxcbiAgICAgICAgICBcImltYWdlLXVybFwiOiBfdm0ubGFyZ2UuaW1hZ2VVcmwsXG4gICAgICAgICAgZmxpcDogX3ZtLmxhcmdlLmZsaXBcbiAgICAgICAgfSxcbiAgICAgICAgb246IHtcbiAgICAgICAgICBcInVwZGF0ZTpzaG93XCI6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIF92bS4kc2V0KF92bS5sYXJnZSwgXCJzaG93XCIsICRldmVudClcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgXSxcbiAgICAxXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXG4gIGZ1bmN0aW9uKCkge1xuICAgIHZhciBfdm0gPSB0aGlzXG4gICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gICAgcmV0dXJuIF9jKFxuICAgICAgXCJkaXZcIixcbiAgICAgIHsgc3RhdGljQ2xhc3M6IFwiaW5mb1wiLCBzdGF0aWNTdHlsZTogeyBjb2xvcjogXCIjYmZiZmJmXCIgfSB9LFxuICAgICAgW1xuICAgICAgICBfYyhcImRpdlwiLCBbX3ZtLl92KFwiQXV0aG9yOiB4NnVkcG5neFwiKV0pLFxuICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICBfYyhcImRpdlwiLCBbXG4gICAgICAgICAgX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAgICAgICBTcGVjaWFsIFRoYW5rczogXCIpLFxuICAgICAgICAgIF9jKFxuICAgICAgICAgICAgXCJhXCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6IFwiaHR0cHM6Ly9naXRodWIuY29tL3hyYWJvaHJva1wiLCB0YXJnZXQ6IFwiX2JsYW5rXCIgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtfdm0uX3YoXCJ4cmFib2hyb2tcIildXG4gICAgICAgICAgKSxcbiAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgLSBUaGFuayB5b3UgZm9yIGhlbHBpbmcgaW1wcm92ZSB0aGlzIHRvb2whXFxuICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgKVxuICAgICAgICBdKSxcbiAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgX2MoXCJkaXZcIiwgW192bS5fdihcIkxhdGVzdCB1cGRhdGU6IDIwMjEtMDMtMTJcIildKSxcbiAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgX2MoXCJkaXZcIiwgW1xuICAgICAgICAgIF9jKFxuICAgICAgICAgICAgXCJhXCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgaHJlZjogXCJodHRwczovL2dpdGh1Yi5jb20veDZ1ZC94NnVkLmdpdGh1Yi5pby9pc3N1ZXNcIixcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtfdm0uX3YoXCJMZWF2ZSBhIG1lc3NhZ2VcIildXG4gICAgICAgICAgKVxuICAgICAgICBdKSxcbiAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgX2MoXCJkaXZcIiwgW1xuICAgICAgICAgIF9jKFxuICAgICAgICAgICAgXCJhXCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgaHJlZjogXCJodHRwczovL2dpdGh1Yi5jb20veDZ1ZC9zZWFyY2gtcGhvdG9zLWJ5LW1vZGVsLXRvb2xcIixcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtfdm0uX3YoXCJTb3VyY2UgY29kZVwiKV1cbiAgICAgICAgICApXG4gICAgICAgIF0pLFxuICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICBfYyhcImRpdlwiLCBbXG4gICAgICAgICAgX2MoXCJzcGFuXCIsIFtfdm0uX3YoXCJTdXBwb3J0IG1lOlwiKV0pLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcImFcIixcbiAgICAgICAgICAgIHsgYXR0cnM6IHsgaHJlZjogXCJodHRwczovL2tvLWZpLmNvbS94NnVkcG5neFwiLCB0YXJnZXQ6IFwiX2JsYW5rXCIgfSB9LFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICBfYyhcInNwYW5cIiwgeyBzdGF0aWNTdHlsZTogeyBcInZlcnRpY2FsLWFsaWduXCI6IFwibWlkZGxlXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgX3ZtLl92KFwiS28tZmkuY29tL3g2dWRwbmd4XCIpXG4gICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICBdXG4gICAgICAgICAgKVxuICAgICAgICBdKVxuICAgICAgXVxuICAgIClcbiAgfVxuXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFxuICAgIFwiYS1zcGluXCIsXG4gICAgeyBzdGF0aWNDbGFzczogXCJ0aHVtYlwiLCBhdHRyczogeyBzcGlubmluZzogX3ZtLmxvYWRpbmcgfSB9LFxuICAgIFtcbiAgICAgIF9jKFxuICAgICAgICBcImRpdlwiLFxuICAgICAgICB7XG4gICAgICAgICAgc3RhdGljQ2xhc3M6IFwidGh1bWItaW5uZXItd3JhcHBlclwiLFxuICAgICAgICAgIGNsYXNzOiB7IGZsaXA6IHRoaXMuaW1hZ2UgJiYgX3ZtLmltYWdlLmZsaXAgfSxcbiAgICAgICAgICBzdHlsZTogeyB3aWR0aDogX3ZtLnNpemUgKyBcInB4XCIsIGhlaWdodDogX3ZtLnNpemUgKyBcInB4XCIgfVxuICAgICAgICB9LFxuICAgICAgICBbXG4gICAgICAgICAgX3ZtLmltYWdlICYmIF92bS5pbWFnZS51cmxcbiAgICAgICAgICAgID8gX2MoXCJpbWdcIiwge1xuICAgICAgICAgICAgICAgIHN0eWxlOiBfdm0uaW1nU3R5bGUsXG4gICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiBfdm0uaW1hZ2UudXJsLCBhbHQ6IFwiXCIgfVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgIF92bS5fdChcImRlZmF1bHRcIilcbiAgICAgICAgXSxcbiAgICAgICAgMlxuICAgICAgKVxuICAgIF1cbiAgKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBWdWUsIHtQcm9wVHlwZX0gZnJvbSAndnVlJ1xyXG5cclxuZnVuY3Rpb24gaXNFbGVtZW50SW5WaWV3cG9ydChlbDogRWxlbWVudCkge1xyXG4gICAgY29uc3QgcmVjdCA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxyXG4gICAgICAgIHdpZHRoID0gcmVjdC5yaWdodCAtIHJlY3QubGVmdCxcclxuICAgICAgICBoZWlnaHQgPSByZWN0LmJvdHRvbSAtIHJlY3QudG9wO1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICByZWN0LnRvcCA+IC1oZWlnaHQgJiZcclxuICAgICAgICByZWN0LmxlZnQgPiAtd2lkdGggJiZcclxuICAgICAgICByZWN0LmJvdHRvbSA8ICh3aW5kb3cuaW5uZXJIZWlnaHQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCkgKyBoZWlnaHQgJiZcclxuICAgICAgICByZWN0LnJpZ2h0IDwgKHdpbmRvdy5pbm5lcldpZHRoIHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCkgKyB3aWR0aFxyXG4gICAgKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0U2Nyb2xsYWJsZVBhcmVudChub2RlPzogRWxlbWVudCB8IG51bGwpOiBFbGVtZW50IHwgdW5kZWZpbmVkIHtcclxuICAgIGlmIChub2RlID09IG51bGwpIHtcclxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gICAgfVxyXG4gICAgaWYgKG5vZGUuc2Nyb2xsSGVpZ2h0ID4gbm9kZS5jbGllbnRIZWlnaHQpIHtcclxuICAgICAgICByZXR1cm4gbm9kZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGdldFNjcm9sbGFibGVQYXJlbnQobm9kZS5wYXJlbnROb2RlIGFzIEVsZW1lbnQpO1xyXG4gICAgfVxyXG59XHJcblxyXG50eXBlIEltYWdlQ2xpcCA9IHtcclxuICAgIHVybDogc3RyaW5nO1xyXG4gICAgdzogbnVtYmVyO1xyXG4gICAgaDogbnVtYmVyO1xyXG4gICAgZmxpcDogYm9vbGVhbjtcclxuICAgIGN4OiBudW1iZXI7XHJcbiAgICBjeTogbnVtYmVyO1xyXG4gICAgY3M6IG51bWJlcjtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEltYWdlVGh1bWIgZXh0ZW5kcyBWdWUuZXh0ZW5kKHtcclxuICAgIGRhdGEoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsXHJcbiAgICAgICAgICAgIGhhbmRsZXJSZW1vdmVkOiBmYWxzZVxyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgcHJvcHM6IHtcclxuICAgICAgICBpbWFnZTogT2JqZWN0IGFzIFByb3BUeXBlPEltYWdlQ2xpcD4sXHJcbiAgICAgICAgc2l6ZToge1xyXG4gICAgICAgICAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IDE2MFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBjb21wdXRlZDoge1xyXG4gICAgICAgIGltZ1N0eWxlKCk6IHsgW25hbWU6IHN0cmluZ106IHN0cmluZyB9IHtcclxuICAgICAgICAgICAgY29uc3QgaW1hZ2UgPSB0aGlzLmltYWdlO1xyXG4gICAgICAgICAgICBpZiAoIShpbWFnZSAmJiBpbWFnZS51cmwpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4ge307XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3Qgc2NhbGUgPSAxIC8gaW1hZ2UuY3MgKiB0aGlzLnNpemU7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogaW1hZ2UudyAqIHNjYWxlICsgJ3B4JyxcclxuICAgICAgICAgICAgICAgIGhlaWdodDogaW1hZ2UuaCAqIHNjYWxlICsgJ3B4JyxcclxuICAgICAgICAgICAgICAgIGxlZnQ6IC1pbWFnZS5jeCAqIHNjYWxlICsgJ3B4JyxcclxuICAgICAgICAgICAgICAgIHRvcDogLWltYWdlLmN5ICogc2NhbGUgKyAncHgnXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIG1vdW50ZWQoKSB7XHJcbiAgICAgICAgY29uc3QgaW1hZ2VUaHVtYiA9IHRoaXMgYXMgSW1hZ2VUaHVtYjtcclxuICAgICAgICBjb25zdCBwYXJlbnQgPSBpbWFnZVRodW1iLnBhcmVudCA9IGdldFNjcm9sbGFibGVQYXJlbnQodGhpcy4kZWwpO1xyXG5cclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmNoZWNrVmlzaWJpbGl0eUNoYW5nZSwgZmFsc2UpO1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuY2hlY2tWaXNpYmlsaXR5Q2hhbmdlLCBmYWxzZSk7XHJcbiAgICAgICAgcGFyZW50Py5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmNoZWNrVmlzaWJpbGl0eUNoYW5nZSwgZmFsc2UpO1xyXG5cclxuICAgICAgICB0aGlzLmNoZWNrVmlzaWJpbGl0eUNoYW5nZSgpO1xyXG4gICAgfSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBjaGVja1Zpc2liaWxpdHlDaGFuZ2UoKSB7XHJcbiAgICAgICAgICAgIGlmIChpc0VsZW1lbnRJblZpZXdwb3J0KHRoaXMuJGVsKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGltYWdlID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgICAgICAgICBpbWFnZS5vbmxvYWQgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgaW1hZ2Uub25lcnJvciA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBpbWFnZS5zcmMgPSB0aGlzLmltYWdlPy51cmw7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUhhbmRsZXJzKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlbW92ZUhhbmRsZXJzKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5oYW5kbGVyUmVtb3ZlZCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuY2hlY2tWaXNpYmlsaXR5Q2hhbmdlKTtcclxuICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5jaGVja1Zpc2liaWxpdHlDaGFuZ2UpO1xyXG4gICAgICAgICAgICBjb25zdCBpbWFnZVRodW1iID0gdGhpcyBhcyBJbWFnZVRodW1iO1xyXG4gICAgICAgICAgICBpbWFnZVRodW1iLnBhcmVudD8ucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5jaGVja1Zpc2liaWxpdHlDaGFuZ2UpO1xyXG4gICAgICAgICAgICB0aGlzLmhhbmRsZXJSZW1vdmVkID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0pIHtcclxuICAgIHBhcmVudD86IEVsZW1lbnQ7XHJcbn1cclxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvdHMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTEhLi9JbWFnZVRodW1iLnRzP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPXRzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy90cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMSEuL0ltYWdlVGh1bWIudHM/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL0ltYWdlVGh1bWIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTNlMjI4NDJhJnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0ltYWdlVGh1bWIudHM/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL0ltYWdlVGh1bWIudHM/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vSW1hZ2VUaHVtYi52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0zZTIyODQyYSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjNlMjI4NDJhXCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiRTpcXFxcZ2l0X3dvcmtzcGFjZVxcXFxzZWFyY2gtcGhvdG9zLWJ5LW1vZGVsLXRvb2xcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnM2UyMjg0MmEnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnM2UyMjg0MmEnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnM2UyMjg0MmEnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL0ltYWdlVGh1bWIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTNlMjI4NDJhJnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzNlMjI4NDJhJywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJzcmMvY29tcG9uZW50cy9JbWFnZVRodW1iLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJpbWFnZS12aWV3ZXItbWFza1wiIH0sIFtcbiAgICBfdm0uc2hvd1xuICAgICAgPyBfYyhcbiAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImltYWdlLXZpZXdlclwiLFxuICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0ICE9PSAkZXZlbnQuY3VycmVudFRhcmdldCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIF92bS5jbG9zZSgkZXZlbnQpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIF9jKFwiaW1nXCIsIHtcbiAgICAgICAgICAgICAgc3R5bGU6IF92bS5pbWdTdHlsZSxcbiAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiBfdm0uaW1hZ2VVcmwsIGFsdDogXCJcIiB9XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJidG4tY2xvc2VcIiwgb246IHsgY2xpY2s6IF92bS5jbG9zZSB9IH0sXG4gICAgICAgICAgICAgIFtfYyhcImEtaWNvblwiLCB7IGF0dHJzOiB7IHR5cGU6IFwiY2xvc2VcIiB9IH0pXSxcbiAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICBfdm0uZmxpY2tyQXV0aG9yTGlua1xuICAgICAgICAgICAgICA/IF9jKFxuICAgICAgICAgICAgICAgICAgXCJhLWJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJidG4tc291cmNlXCIsXG4gICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNpemU6IFwic21hbGxcIiB9LFxuICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLm9wZW5BdXRob3JMaW5rIH1cbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgIENsaWNrIGhlcmUgZm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhpcyBwaWN0dXJlXFxuICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgICAgXSxcbiAgICAgICAgICAxXG4gICAgICAgIClcbiAgICAgIDogX3ZtLl9lKClcbiAgXSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcclxuaW1wb3J0IHtnZXRGbGlja3JBdXRob3JMaW5rfSBmcm9tIFwiLi4vdXRpbHMvZmxpY2tyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbWFnZVZpZXdlciBleHRlbmRzIFZ1ZS5leHRlbmQoe1xyXG4gICAgcHJvcHM6IHtcclxuICAgICAgICBzaG93OiBCb29sZWFuLFxyXG4gICAgICAgIGltYWdlVXJsOiBTdHJpbmcsXHJcbiAgICAgICAgZmxpcDoge1xyXG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBmYWxzZVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBkYXRhKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAwLFxyXG4gICAgICAgICAgICBoZWlnaHQ6IDAsXHJcbiAgICAgICAgICAgIHpvb206IDFcclxuICAgICAgICB9O1xyXG4gICAgfSxcclxuICAgIHdhdGNoOiB7XHJcbiAgICAgICAgaW1hZ2VVcmwodXJsKSB7XHJcbiAgICAgICAgICAgIHRoaXMud2lkdGggPSAwO1xyXG4gICAgICAgICAgICB0aGlzLmhlaWdodCA9IDA7XHJcbiAgICAgICAgICAgIHRoaXMuem9vbSA9IDE7XHJcbiAgICAgICAgICAgIGNvbnN0IGltYWdlID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgICAgIGltYWdlLm9ubG9hZCA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMud2lkdGggPSBpbWFnZS53aWR0aDtcclxuICAgICAgICAgICAgICAgIHRoaXMuaGVpZ2h0ID0gaW1hZ2UuaGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgY29uc3QgbWF4V2lkdGggPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGggKiAwLjk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtYXhIZWlnaHQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0ICogMC45O1xyXG4gICAgICAgICAgICAgICAgdGhpcy56b29tID0gTWF0aC5taW4oXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4V2lkdGggLyBpbWFnZS53aWR0aCxcclxuICAgICAgICAgICAgICAgICAgICBtYXhIZWlnaHQgLyBpbWFnZS5oZWlnaHQsXHJcbiAgICAgICAgICAgICAgICAgICAgMVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgaW1hZ2Uuc3JjID0gdXJsO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBjb21wdXRlZDoge1xyXG4gICAgICAgIGltZ1N0eWxlKCk6IHsgW25hbWU6IHN0cmluZ106IHN0cmluZyB9IHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgICdtYXJnaW4tbGVmdCc6IC0odGhpcy53aWR0aCAvIDIgfCAwKSArICdweCcsXHJcbiAgICAgICAgICAgICAgICAnbWFyZ2luLXRvcCc6IC0odGhpcy5oZWlnaHQgLyAyIHwgMCkgKyAncHgnLFxyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBgc2NhbGVYKCR7dGhpcy56b29tICogKHRoaXMuZmxpcCA/IC0xIDogMSl9KSBzY2FsZVkoJHt0aGlzLnpvb219KWBcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGZsaWNrckF1dGhvckxpbmsoKTogc3RyaW5nIHwgbnVsbCB7XHJcbiAgICAgICAgICAgIHJldHVybiBnZXRGbGlja3JBdXRob3JMaW5rKHRoaXMuaW1hZ2VVcmwpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgY2xvc2UoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzaG93JywgZmFsc2UpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb3BlbkF1dGhvckxpbmsoKSB7XHJcbiAgICAgICAgICAgIHdpbmRvdy5vcGVuKHRoaXMuZmxpY2tyQXV0aG9yTGluayEpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSkge1xyXG59XHJcbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3RzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0xIS4vSW1hZ2VWaWV3ZXIudHM/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3RzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0xIS4vSW1hZ2VWaWV3ZXIudHM/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL0ltYWdlVmlld2VyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01NTY3ZTZjZCZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9JbWFnZVZpZXdlci50cz92dWUmdHlwZT1zY3JpcHQmbGFuZz10cyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vSW1hZ2VWaWV3ZXIudHM/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vSW1hZ2VWaWV3ZXIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NTU2N2U2Y2QmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI1NTY3ZTZjZFwiLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkU6XFxcXGdpdF93b3Jrc3BhY2VcXFxcc2VhcmNoLXBob3Rvcy1ieS1tb2RlbC10b29sXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtaG90LXJlbG9hZC1hcGlcXFxcZGlzdFxcXFxpbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJzU1NjdlNmNkJykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzU1NjdlNmNkJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzU1NjdlNmNkJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9JbWFnZVZpZXdlci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NTU2N2U2Y2Qmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignNTU2N2U2Y2QnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9jb21wb25lbnRzL0ltYWdlVmlld2VyLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImltcG9ydCBWdWUgZnJvbSAndnVlJ1xyXG5cclxuaW1wb3J0IE1vZGVsVmlld2VyIGZyb20gJy4uL2NvbXBvbmVudHMvTW9kZWxWaWV3ZXIudnVlJ1xyXG5pbXBvcnQgSW1hZ2VUaHVtYiBmcm9tICcuLi9jb21wb25lbnRzL0ltYWdlVGh1bWIudnVlJ1xyXG5pbXBvcnQgSW1hZ2VWaWV3ZXIgZnJvbSAnLi4vY29tcG9uZW50cy9JbWFnZVZpZXdlci52dWUnXHJcblxyXG5pbXBvcnQge2RlZ0V1bGVyVG9RdWF0ZXJuaW9uLCBkaXN0YW5jZX0gZnJvbSAnLi4vdXRpbHMvcXVhdGVybmlvbidcclxuXHJcbmltcG9ydCBtb2RlbHMgZnJvbSAnLi4vbW9kZWxzJ1xyXG5cclxudHlwZSBEYXRhUmVjb3JkID0ge1xyXG4gICAgcng6IG51bWJlcixcclxuICAgIHJ5OiBudW1iZXIsXHJcbiAgICByejogbnVtYmVyLFxyXG4gICAgdXJsOiBzdHJpbmcsXHJcbiAgICBjeDogbnVtYmVyLFxyXG4gICAgY3k6IG51bWJlcixcclxuICAgIGNzOiBudW1iZXIsXHJcbiAgICB3OiBudW1iZXIsXHJcbiAgICBoOiBudW1iZXIsXHJcbiAgICB0YWdzOiBzdHJpbmdbXVxyXG59O1xyXG50eXBlIFNlYXJjaFJlc3VsdCA9IHtcclxuICAgIHVybDogc3RyaW5nO1xyXG4gICAgdzogbnVtYmVyO1xyXG4gICAgaDogbnVtYmVyO1xyXG4gICAgZmxpcDogYm9vbGVhbjtcclxuICAgIGN4OiBudW1iZXI7XHJcbiAgICBjeTogbnVtYmVyO1xyXG4gICAgY3M6IG51bWJlcjtcclxuICAgIG1hdGNoOiBudW1iZXI7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZWFyY2ggZXh0ZW5kcyBWdWUuZXh0ZW5kKHtcclxuICAgIGNvbXBvbmVudHM6IHtNb2RlbFZpZXdlciwgSW1hZ2VUaHVtYiwgSW1hZ2VWaWV3ZXJ9LFxyXG4gICAgZGF0YSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcclxuICAgICAgICAgICAgbW9kZWxWaWV3ZXJTaXplOiAzNjAsXHJcbiAgICAgICAgICAgIG1vZGVsczogbW9kZWxzLFxyXG4gICAgICAgICAgICBkYXRhOiBbXSBhcyBEYXRhUmVjb3JkW10sXHJcbiAgICAgICAgICAgIG1vZGVsOiB7XHJcbiAgICAgICAgICAgICAgICB1cmw6IG1vZGVsc1swXS5wYXRoLFxyXG4gICAgICAgICAgICAgICAgcm90YXRlWDogMCxcclxuICAgICAgICAgICAgICAgIHJvdGF0ZVk6IDAsXHJcbiAgICAgICAgICAgICAgICByb3RhdGVaOiAwLFxyXG4gICAgICAgICAgICAgICAgem9vbTogMTAsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGtleXdvcmQ6ICcnLFxyXG4gICAgICAgICAgICByZXN1bHQ6IFtdIGFzIFNlYXJjaFJlc3VsdFtdLFxyXG4gICAgICAgICAgICBjb2xsYXBzZVNlYXJjaENvbmRpdGlvbnM6IGZhbHNlLFxyXG4gICAgICAgICAgICBsYXJnZToge1xyXG4gICAgICAgICAgICAgICAgc2hvdzogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBpbWFnZVVybDogJycsXHJcbiAgICAgICAgICAgICAgICBmbGlwOiBmYWxzZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbiAgICBjb21wdXRlZDoge1xyXG4gICAgICAgIHRhZ3MoKTogc3RyaW5nW10ge1xyXG4gICAgICAgICAgICBjb25zdCBtYXA6IHsgW3RhZzogc3RyaW5nXTogYm9vbGVhbiB9ID0ge307XHJcbiAgICAgICAgICAgIHRoaXMuZGF0YS5mb3JFYWNoKHJlY29yZCA9PiByZWNvcmQudGFncy5mb3JFYWNoKHRhZyA9PiB7XHJcbiAgICAgICAgICAgICAgICBtYXBbdGFnXSA9IHRydWU7XHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKG1hcCkuc29ydCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbW9kZWxBdXRob3JMaW5rKCk6IHN0cmluZyB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm1vZGVscy5maW5kKG1vZGVsID0+IG1vZGVsLnBhdGggPT09IHRoaXMubW9kZWwudXJsKT8ub3JpZ2luIHx8ICcnO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBhc3luYyBtb3VudGVkKCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuZGF0YSA9IChhd2FpdCBpbXBvcnQoJy4uL2RhdGEnKSkuZGVmYXVsdDtcclxuICAgICAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIHNlYXJjaCgpIHtcclxuICAgICAgICAgICAgbGV0IGRhdGEgPSB0aGlzLmtleXdvcmQgPyB0aGlzLmRhdGEuZmlsdGVyKGl0ZW0gPT4gaXRlbS50YWdzPy5pbmNsdWRlcyh0aGlzLmtleXdvcmQpKSA6IHRoaXMuZGF0YTtcclxuICAgICAgICAgICAgY29uc3QgZGlyZWN0aW9uID0gZGVnRXVsZXJUb1F1YXRlcm5pb24odGhpcy5tb2RlbC5yb3RhdGVYICsgMTgwLCB0aGlzLm1vZGVsLnJvdGF0ZVkgKyAxODAsIHRoaXMubW9kZWwucm90YXRlWiArIDE4MCk7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdDogU2VhcmNoUmVzdWx0W10gPSBkYXRhLm1hcChpdGVtID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGZsaXAgPSBpdGVtLnJ5ICogdGhpcy5tb2RlbC5yb3RhdGVZIDwgMDsgLy8gZmxpcCB0aGUgaW1hZ2UgaG9yaXpvbnRhbGx5IGlmIGl0IGNhbiBtYXRjaCBiZXR0ZXJcclxuICAgICAgICAgICAgICAgIGNvbnN0IHJ4ID0gaXRlbS5yeDtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHJ5ID0gZmxpcCA/IC1pdGVtLnJ5IDogaXRlbS5yeTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHJ6ID0gZmxpcCA/IC1pdGVtLnJ6IDogaXRlbS5yejtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG1hdGNoID0gZGlzdGFuY2UoZGlyZWN0aW9uLCBkZWdFdWxlclRvUXVhdGVybmlvbihyeCArIDE4MCwgcnkgKyAxODAsIHJ6ICsgMTgwKSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gey4uLml0ZW0sIGZsaXAsIHJ5LCByeiwgbWF0Y2h9O1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy8gZmlyc3QgMzAgYmVzdCByZXN1bHRzXHJcbiAgICAgICAgICAgIHJlc3VsdC5zb3J0KChhLCBiKSA9PiBhLm1hdGNoIC0gYi5tYXRjaCk7XHJcbiAgICAgICAgICAgIHRoaXMucmVzdWx0ID0gcmVzdWx0LnNsaWNlKDAsIE1hdGgubWluKHJlc3VsdC5sZW5ndGgsIDMwKSk7XHJcbiAgICAgICAgICAgIHRoaXMuY29sbGFwc2VTZWFyY2hDb25kaXRpb25zID0gdHJ1ZTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNob3coaW1nOiBTZWFyY2hSZXN1bHQpIHtcclxuICAgICAgICAgICAgdGhpcy5sYXJnZS5pbWFnZVVybCA9IGltZy51cmw7XHJcbiAgICAgICAgICAgIHRoaXMubGFyZ2UuZmxpcCA9IGltZy5mbGlwO1xyXG4gICAgICAgICAgICB0aGlzLmxhcmdlLnNob3cgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSkge1xyXG59XHJcbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3RzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0xIS4vU2VhcmNoLnRzP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPXRzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy90cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMSEuL1NlYXJjaC50cz92dWUmdHlwZT1zY3JpcHQmbGFuZz10cyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vU2VhcmNoLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xYTFkMzczYyZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9TZWFyY2gudHM/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL1NlYXJjaC50cz92dWUmdHlwZT1zY3JpcHQmbGFuZz10cyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9TZWFyY2gudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MWExZDM3M2MmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCIxYTFkMzczY1wiLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkU6XFxcXGdpdF93b3Jrc3BhY2VcXFxcc2VhcmNoLXBob3Rvcy1ieS1tb2RlbC10b29sXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtaG90LXJlbG9hZC1hcGlcXFxcZGlzdFxcXFxpbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJzFhMWQzNzNjJykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzFhMWQzNzNjJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzFhMWQzNzNjJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9TZWFyY2gudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTFhMWQzNzNjJnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzFhMWQzNzNjJywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJzcmMvdmlld3MvU2VhcmNoLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vTW9kZWxWaWV3ZXIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NGVmN2NmMWImbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCI2MzViNzU0MlwiLCBjb250ZW50LCBmYWxzZSwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuIC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG4gaWYoIWNvbnRlbnQubG9jYWxzKSB7XG4gICBtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL01vZGVsVmlld2VyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTRlZjdjZjFiJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiwgZnVuY3Rpb24oKSB7XG4gICAgIHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL01vZGVsVmlld2VyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTRlZjdjZjFiJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIik7XG4gICAgIGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuICAgICB1cGRhdGUobmV3Q29udGVudCk7XG4gICB9KTtcbiB9XG4gLy8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImltcG9ydCBBeGlvcyBmcm9tICdheGlvcydcclxuXHJcbnR5cGUgUGhvdG9zU2VhcmNoUmVzcG9uc2UgPSB7XHJcbiAgICBzdGF0OiBzdHJpbmcsXHJcbiAgICBwaG90b3M6IHtcclxuICAgICAgICBwYWdlOiBudW1iZXIsXHJcbiAgICAgICAgcGFnZXM6IG51bWJlcixcclxuICAgICAgICBwZXJwYWdlOiBudW1iZXIsXHJcbiAgICAgICAgdG90YWw6IHN0cmluZyxcclxuICAgICAgICBwaG90bzoge1xyXG4gICAgICAgICAgICBmYXJtOiBudW1iZXIsXHJcbiAgICAgICAgICAgIGlkOiBzdHJpbmcsXHJcbiAgICAgICAgICAgIGlzZmFtaWx5OiBudW1iZXIsXHJcbiAgICAgICAgICAgIGlzZnJpZW5kOiBudW1iZXIsXHJcbiAgICAgICAgICAgIGlzcHVibGljOiBudW1iZXIsXHJcbiAgICAgICAgICAgIG93bmVyOiBzdHJpbmcsXHJcbiAgICAgICAgICAgIHNlY3JldDogc3RyaW5nLFxyXG4gICAgICAgICAgICBzZXJ2ZXI6IHN0cmluZyxcclxuICAgICAgICAgICAgdGl0bGU6IHN0cmluZ1xyXG4gICAgICAgIH1bXSxcclxuICAgIH1cclxufTtcclxuXHJcbmNvbnN0IFRIVU1CTkFJTF9JTUFHRV9TVUZGSVggPSAnX3QuanBnJztcclxuY29uc3QgTUVESVVNX0lNQUdFX1NVRkZJWCA9ICcuanBnJztcclxuY29uc3QgTEFSR0VfSU1BR0VfU1VGRklYID0gJ19iLmpwZyc7XHJcblxyXG5mdW5jdGlvbiBnZXRCYXNlSW1hZ2VVcmwoZmFybTogbnVtYmVyLCBzZXJ2ZXI6IHN0cmluZywgaWQ6IHN0cmluZywgc2VjcmV0OiBzdHJpbmcpIHtcclxuICAgIHJldHVybiBgaHR0cHM6Ly9mYXJtJHtmYXJtfS5zdGF0aWMuZmxpY2tyLmNvbS8ke3NlcnZlcn0vJHtpZH1fJHtzZWNyZXR9YDtcclxufVxyXG5cclxuZnVuY3Rpb24gcGFyc2VGbGlja3JVcmwodXJsOiBzdHJpbmcpIHtcclxuICAgIGNvbnN0IG1hdGNoID0gdXJsLm1hdGNoKC9mYXJtKFswLTldKylcXC5zdGF0aWNcXC5mbGlja3JcXC5jb21cXC8oWzAtOV0rKVxcLyhbMC05XSspXyhbMC05YS16XSspLyk7XHJcbiAgICBpZiAoIW1hdGNoKSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGZhcm06IE51bWJlcihtYXRjaFsxXSksXHJcbiAgICAgICAgc2VydmVyOiBtYXRjaFsyXSxcclxuICAgICAgICBpZDogbWF0Y2hbM10sXHJcbiAgICAgICAgc2VjcmV0OiBtYXRjaFs0XVxyXG4gICAgfTtcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgRmxpY2tyU2VhcmNoUmVzdWx0ID0ge1xyXG4gICAgcGFnZTogbnVtYmVyLFxyXG4gICAgcGFnZXM6IG51bWJlcixcclxuICAgIHBlclBhZ2U6IG51bWJlcixcclxuICAgIHRvdGFsOiBudW1iZXIsXHJcbiAgICBwaG90b3M6IHtcclxuICAgICAgICBpZDogc3RyaW5nLFxyXG4gICAgICAgIHRodW1iOiBzdHJpbmcsXHJcbiAgICAgICAgbWVkaXVtOiBzdHJpbmcsXHJcbiAgICAgICAgbGFyZ2U6IHN0cmluZ1xyXG4gICAgfVtdXHJcbn07XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmxpY2tyU2VhcmNoKFxyXG4gICAgYXBpS2V5OiBzdHJpbmcsXHJcbiAgICBrZXl3b3Jkczogc3RyaW5nLFxyXG4gICAgcGVyUGFnZTogbnVtYmVyLFxyXG4gICAgcGFnZTogbnVtYmVyXHJcbik6IFByb21pc2U8RmxpY2tyU2VhcmNoUmVzdWx0PiB7XHJcbiAgICAvLyBodHRwczovL3d3dy5mbGlja3IuY29tL3NlcnZpY2VzL2FwaS9mbGlja3IucGhvdG9zLnNlYXJjaC5odG1sXHJcbiAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHtcclxuICAgICAgICBtZXRob2Q6ICdmbGlja3IucGhvdG9zLnNlYXJjaCcsXHJcbiAgICAgICAgYXBpX2tleTogYXBpS2V5LFxyXG4gICAgICAgIGZvcm1hdDogJ2pzb24nLFxyXG4gICAgICAgIG5vanNvbmNhbGxiYWNrOiAnMScsXHJcbiAgICAgICAgbGljZW5zZTogJzIsMyw0LDUsNiw5JywgLy8gYWxsIGNjXHJcbiAgICAgICAgcHJpdmFjeV9maWx0ZXI6ICcxJywgLy8gcHVibGljIHBob3Rvc1xyXG4gICAgICAgIGNvbnRlbnRfdHlwZTogJzEnLCAvLyBwaG90b3Mgb25seVxyXG4gICAgICAgIHRleHQ6IGtleXdvcmRzLFxyXG4gICAgICAgIHNvcnQ6ICdyZWxldmFuY2UnLFxyXG4gICAgICAgIHBlcl9wYWdlOiBNYXRoLm1heCgxLCBNYXRoLm1pbig1MDAsIHBlclBhZ2UpKSArICcnLFxyXG4gICAgICAgIHBhZ2U6IHBhZ2UgKyAnJyxcclxuICAgIH0pO1xyXG4gICAgY29uc3QgYXBpVXJsID0gJ2h0dHBzOi8vYXBpLmZsaWNrci5jb20vc2VydmljZXMvcmVzdC8/JyArIHBhcmFtcy50b1N0cmluZygpO1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBBeGlvcy5jcmVhdGUoKS5nZXQoYXBpVXJsKTtcclxuICAgIGNvbnN0IGRhdGEgPSByZXNwb25zZS5kYXRhIGFzIFBob3Rvc1NlYXJjaFJlc3BvbnNlO1xyXG4gICAgaWYgKGRhdGEuc3RhdCAhPT0gJ29rJykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUmVxdWVzdCBmYWlsZWQnKTtcclxuICAgIH1cclxuICAgIGNvbnN0IHBob3RvcyA9IGRhdGEucGhvdG9zLnBob3RvO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBwYWdlOiBkYXRhLnBob3Rvcy5wYWdlLFxyXG4gICAgICAgIHBhZ2VzOiBkYXRhLnBob3Rvcy5wYWdlcyxcclxuICAgICAgICBwZXJQYWdlOiBkYXRhLnBob3Rvcy5wZXJwYWdlLFxyXG4gICAgICAgIHRvdGFsOiBOdW1iZXIoZGF0YS5waG90b3MudG90YWwpLFxyXG4gICAgICAgIHBob3RvczogcGhvdG9zLm1hcChwaG90byA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGJhc2VVcmwgPSBnZXRCYXNlSW1hZ2VVcmwocGhvdG8uZmFybSwgcGhvdG8uc2VydmVyLCBwaG90by5pZCwgcGhvdG8uc2VjcmV0KTtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIGlkOiBwaG90by5pZCxcclxuICAgICAgICAgICAgICAgIHRodW1iOiBiYXNlVXJsICsgVEhVTUJOQUlMX0lNQUdFX1NVRkZJWCxcclxuICAgICAgICAgICAgICAgIG1lZGl1bTogYmFzZVVybCArIE1FRElVTV9JTUFHRV9TVUZGSVgsXHJcbiAgICAgICAgICAgICAgICBsYXJnZTogYmFzZVVybCArIExBUkdFX0lNQUdFX1NVRkZJWFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH0pXHJcbiAgICB9O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RmxpY2tySWQodXJsOiBzdHJpbmcpIHtcclxuICAgIGNvbnN0IG1hdGNoID0gcGFyc2VGbGlja3JVcmwodXJsKTtcclxuICAgIHJldHVybiBtYXRjaCAmJiBtYXRjaC5pZDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEZsaWNrclRodW1iKHVybDogc3RyaW5nKSB7XHJcbiAgICBjb25zdCBtYXRjaCA9IHBhcnNlRmxpY2tyVXJsKHVybCk7XHJcbiAgICBpZiAoIW1hdGNoKSB7XHJcbiAgICAgICAgcmV0dXJuIHVybDtcclxuICAgIH1cclxuICAgIHJldHVybiBnZXRCYXNlSW1hZ2VVcmwobWF0Y2guZmFybSwgbWF0Y2guc2VydmVyLCBtYXRjaC5pZCwgbWF0Y2guc2VjcmV0KSArIFRIVU1CTkFJTF9JTUFHRV9TVUZGSVg7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRGbGlja3JBdXRob3JMaW5rKHVybDogc3RyaW5nKSB7XHJcbiAgICBjb25zdCBtYXRjaCA9IHBhcnNlRmxpY2tyVXJsKHVybCk7XHJcbiAgICByZXR1cm4gbWF0Y2ggPyBgaHR0cHM6Ly93d3cuZmxpY2tyLmNvbS9waG90by5nbmU/aWQ9JHttYXRjaC5pZH1gIDogbnVsbDtcclxufVxyXG4iLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vTW9kZWxWaWV3ZXIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NGVmN2NmMWImbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5tb2RlbC12aWV3ZXJbZGF0YS12LTRlZjdjZjFiXXtwb3NpdGlvbjpyZWxhdGl2ZX0ubW9kZWwtdmlld2VyIGNhbnZhc1tkYXRhLXYtNGVmN2NmMWJde2N1cnNvcjpncmFifVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCJ0eXBlIFF1YXRlcm5pb24gPSB7IHg6IG51bWJlciwgeTogbnVtYmVyLCB6OiBudW1iZXIsIHc6IG51bWJlciB9O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHF1YXRlcm5pb24oeWF3OiBudW1iZXIsIHBpdGNoOiBudW1iZXIsIHJvbGw6IG51bWJlcik6IFF1YXRlcm5pb24ge1xyXG4gICAgY29uc3QgY3kgPSBNYXRoLmNvcyh5YXcgKiAwLjUpO1xyXG4gICAgY29uc3Qgc3kgPSBNYXRoLnNpbih5YXcgKiAwLjUpO1xyXG4gICAgY29uc3QgY3AgPSBNYXRoLmNvcyhwaXRjaCAqIDAuNSk7XHJcbiAgICBjb25zdCBzcCA9IE1hdGguc2luKHBpdGNoICogMC41KTtcclxuICAgIGNvbnN0IGNyID0gTWF0aC5jb3Mocm9sbCAqIDAuNSk7XHJcbiAgICBjb25zdCBzciA9IE1hdGguc2luKHJvbGwgKiAwLjUpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB4OiBjeSAqIGNwICogY3IgKyBzeSAqIHNwICogc3IsXHJcbiAgICAgICAgeTogY3kgKiBjcCAqIHNyIC0gc3kgKiBzcCAqIGNyLFxyXG4gICAgICAgIHo6IHN5ICogY3AgKiBzciArIGN5ICogc3AgKiBjcixcclxuICAgICAgICB3OiBzeSAqIGNwICogY3IgLSBjeSAqIHNwICogc3JcclxuICAgIH07XHJcbn1cclxuXHJcbmNvbnN0IERFR18yX1JBRCA9IDEgLyAxODAgKiBNYXRoLlBJO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGRlZ0V1bGVyVG9RdWF0ZXJuaW9uKHg6IG51bWJlciwgeTogbnVtYmVyLCB6OiBudW1iZXIpIHtcclxuICAgIHJldHVybiBxdWF0ZXJuaW9uKHogKiBERUdfMl9SQUQsIHkgKiBERUdfMl9SQUQsIHggKiBERUdfMl9SQUQpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZGlzdGFuY2UocTE6IFF1YXRlcm5pb24sIHEyOiBRdWF0ZXJuaW9uKSB7XHJcbiAgICBjb25zdCBwcm9kID0gcTEueCAqIHEyLnggKyBxMS55ICogcTIueSArIHExLnogKiBxMi56ICsgcTEudyAqIHEyLnc7XHJcbiAgICByZXR1cm4gMSAtIHByb2QgKiBwcm9kO1xyXG59XHJcbiIsImNvbnN0IG1vZGVsczogeyBuYW1lOiBzdHJpbmcsIHBhdGg6IHN0cmluZywgb3JpZ2luOiBzdHJpbmcgfVtdID0gW1xyXG4gICAge1xyXG4gICAgICAgIG5hbWU6ICdXb2xmIFNrdWxsIChmb3IgY2FuaXMpJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL3dvbGYtc2t1bGwub2JqJyxcclxuICAgICAgICBvcmlnaW46ICdodHRwczovL3NrZXRjaGZhYi5jb20vb3N1ZWNhbXB1cydcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ0h5ZW5hIFNrdWxsJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL2h5ZW5hLXNrdWxsLm9iaicsXHJcbiAgICAgICAgb3JpZ2luOiAnaHR0cHM6Ly93d3cubXltaW5pZmFjdG9yeS5jb20vdXNlcnMvRGlnaW1vcnBoJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAnTGlvbiBTa3VsbCAoZm9yIGJpZyBjYXRzKScsXHJcbiAgICAgICAgcGF0aDogJy4vc3RhdGljL21vZGVscy9saW9uLXNrdWxsLm9iaicsXHJcbiAgICAgICAgb3JpZ2luOiAnaHR0cHM6Ly9za2V0Y2hmYWIuY29tL2F1Y2tsYW5kbXVzZXVtJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAnQ2F0IFNrdWxsIChmb3Igc21hbGwgY2F0cyknLFxyXG4gICAgICAgIHBhdGg6ICcuL3N0YXRpYy9tb2RlbHMvY2F0LXNrdWxsLm9iaicsXHJcbiAgICAgICAgb3JpZ2luOiAnaHR0cHM6Ly9za2V0Y2hmYWIuY29tL29wZW5lZGVkaW5idXJnaCdcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ0JlYXIgU2t1bGwnLFxyXG4gICAgICAgIHBhdGg6ICcuL3N0YXRpYy9tb2RlbHMvYmVhci1za3VsbC5vYmonLFxyXG4gICAgICAgIG9yaWdpbjogJ2h0dHBzOi8vc2tldGNoZmFiLmNvbS9nZW9mZnJleW1hcmNoYWwnXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIG5hbWU6ICdSYWNjb29uIFNrdWxsJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL3JhY2Nvb24tc2t1bGwub2JqJyxcclxuICAgICAgICBvcmlnaW46ICdodHRwczovL3NrZXRjaGZhYi5jb20vM2QtbW9kZWxzL3JhY2Nvb24tc2t1bGwtNGJlYzlmMTc2NjE1NDIyNjliZmUyZjY2ZWJlNDIzNjEnXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIG5hbWU6ICdTa3VuayBTa3VsbCcsXHJcbiAgICAgICAgcGF0aDogJy4vc3RhdGljL21vZGVscy9za3Vuay1za3VsbC5vYmonLFxyXG4gICAgICAgIG9yaWdpbjogJ2h0dHBzOi8vc2tldGNoZmFiLmNvbS8zZC1tb2RlbHMvc2t1bmstc2t1bGwtYzgyZjVlY2M4YjU0NDU4Mjg2MTljYzZlOGFlYTc0NTcnXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIG5hbWU6ICdSaXZlciBPdHRlciBTa3VsbCcsXHJcbiAgICAgICAgcGF0aDogJy4vc3RhdGljL21vZGVscy9yaXZlci1vdHRlci1za3VsbC5vYmonLFxyXG4gICAgICAgIG9yaWdpbjogJ2h0dHBzOi8vc2tldGNoZmFiLmNvbS8zZC1tb2RlbHMvcml2ZXItb3R0ZXItc2t1bGwtYzE3ZTJjZDExNzcxNGRhN2EzNTkyYzFmMTNlYzY0YWMnXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIG5hbWU6ICdPcG9zc3VtIFNrdWxsJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL29wb3NzdW0tc2t1bGwub2JqJyxcclxuICAgICAgICBvcmlnaW46ICdodHRwczovL3d3dy50aGluZ2l2ZXJzZS5jb20vU3BmYWZmMTk5NC9kZXNpZ25zJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAnS2FuZ2Fyb28gU2t1bGwnLFxyXG4gICAgICAgIHBhdGg6ICcuL3N0YXRpYy9tb2RlbHMva2FuZ2Fyb28tc2t1bGwub2JqJyxcclxuICAgICAgICBvcmlnaW46ICdodHRwczovL3NrZXRjaGZhYi5jb20vM2QtbW9kZWxzL2thbmdhcm9vd2FsbGFieS1za3VsbC02MmEzZjNmYzM3MDY0ZjhjYjBlYjgzOWY3ZDAzZTcwZidcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ0hvcnNlIFNrdWxsJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL2hvcnNlLXNrdWxsLm9iaicsXHJcbiAgICAgICAgb3JpZ2luOiAnaHR0cHM6Ly9za2V0Y2hmYWIuY29tL29wZW5lZGVkaW5idXJnaCdcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ0NvdyBTa3VsbCcsXHJcbiAgICAgICAgcGF0aDogJy4vc3RhdGljL21vZGVscy9jb3ctc2t1bGwub2JqJyxcclxuICAgICAgICBvcmlnaW46ICdodHRwczovL3NrZXRjaGZhYi5jb20vYmVuY3ZhJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAnU2hlZXAgU2t1bGwnLFxyXG4gICAgICAgIHBhdGg6ICcuL3N0YXRpYy9tb2RlbHMvc2hlZXAtc2t1bGwub2JqJyxcclxuICAgICAgICBvcmlnaW46ICdodHRwczovL3NrZXRjaGZhYi5jb20vdmljdG9yenVnJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAnTXVsZSBEZWVyIFNrdWxsJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL211bGUtZGVlci1za3VsbC5vYmonLFxyXG4gICAgICAgIG9yaWdpbjogJ2h0dHBzOi8vc2tldGNoZmFiLmNvbS91dmljbGliJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAnRWxlcGhhbnQgU2t1bGwnLFxyXG4gICAgICAgIHBhdGg6ICcuL3N0YXRpYy9tb2RlbHMvZWxlcGhhbnQtc2t1bGwub2JqJyxcclxuICAgICAgICBvcmlnaW46ICdodHRwczovL3NrZXRjaGZhYi5jb20vM2QtbW9kZWxzL2FmcmljYW4tZm9yZXN0LWVsZXBoYW50LWZvci1tb2JpbGUtZGV2aWNlcy0zMjBmZDdmZjFkN2U0NTAxODkzMzNkYzI3MGNmMTJhZSdcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ1JoaW5vIFNrdWxsJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL3JoaW5vLXNrdWxsLm9iaicsXHJcbiAgICAgICAgb3JpZ2luOiAnaHR0cHM6Ly9za2V0Y2hmYWIuY29tLzNkLW1vZGVscy9yaGlub2Nlcm9zLXNrdWxsLWRiZWU0ZjhmMzJmZDRhOTZiNWEwMjExMzdkZDRlMmM2J1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAnUGlnIFNrdWxsJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL3BpZy1za3VsbC5vYmonLFxyXG4gICAgICAgIG9yaWdpbjogJ2h0dHBzOi8vc2tldGNoZmFiLmNvbS9nZW9mZnJleW1hcmNoYWwnXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIG5hbWU6ICdSYXQgU2t1bGwnLFxyXG4gICAgICAgIHBhdGg6ICcuL3N0YXRpYy9tb2RlbHMvcmF0LXNrdWxsLm9iaicsXHJcbiAgICAgICAgb3JpZ2luOiAnaHR0cHM6Ly93d3cudGhpbmdpdmVyc2UuY29tL3NjaWVuY2VtaW5lci9hYm91dCdcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ1NxdWlycmVsIFNrdWxsJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL3NxdWlycmVsLXNrdWxsLm9iaicsXHJcbiAgICAgICAgb3JpZ2luOiAnaHR0cHM6Ly9za2V0Y2hmYWIuY29tLzNkLW1vZGVscy9pbW5oLXItODAtc3F1aXJyZWwtY3Jhbml1bS1hNjI0ZDc3YmJmYWE0YzY2OTU3Yzc4Y2U0ZmZlNThkMidcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ1JhYmJpdCBTa3VsbCcsXHJcbiAgICAgICAgcGF0aDogJy4vc3RhdGljL21vZGVscy9yYWJiaXQtc2t1bGwub2JqJyxcclxuICAgICAgICBvcmlnaW46ICdodHRwczovL3NrZXRjaGZhYi5jb20vYWdhbmN6J1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAnQmF0IFNrdWxsJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL2JhdC1za3VsbC5vYmonLFxyXG4gICAgICAgIG9yaWdpbjogJ2h0dHBzOi8vc2tldGNoZmFiLmNvbS91b2RfbXVzZXVtcydcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ0NoaWNrZW4gU2t1bGwgKGZvciBiaXJkcyknLFxyXG4gICAgICAgIHBhdGg6ICcuL3N0YXRpYy9tb2RlbHMvY2hpY2tlbi1za3VsbC5vYmonLFxyXG4gICAgICAgIG9yaWdpbjogJ2h0dHBzOi8vc2tldGNoZmFiLmNvbS9taXN0ZXJkZXZpb3VzJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAnQ3JvY29kaWxlIFNrdWxsJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL2Nyb2NvZGlsZS1za3VsbC5vYmonLFxyXG4gICAgICAgIG9yaWdpbjogJ2h0dHBzOi8vY3VsdHMzZC5jb20vZW4vdXNlcnMvTWFkU2NpZW50aXN0M0QvY3JlYXRpb25zJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAnQWxsaWdhdG9yIFNrdWxsJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL2FsbGlnYXRvci1za3VsbC5vYmonLFxyXG4gICAgICAgIG9yaWdpbjogJ2h0dHBzOi8vc2tldGNoZmFiLmNvbS9uZW9tZXRyaXh0ZWNoJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAnSWd1YW5hIFNrdWxsIChmb3IgbGl6YXJkcyknLFxyXG4gICAgICAgIHBhdGg6ICcuL3N0YXRpYy9tb2RlbHMvaWd1YW5hLXNrdWxsLm9iaicsXHJcbiAgICAgICAgb3JpZ2luOiAnaHR0cHM6Ly9za2V0Y2hmYWIuY29tLzNkLW1vZGVscy9ncmVlbi1pZ3VhbmEtc2t1bGwtb3V2Yy0xMDY3Ny0xNDI3Zjg4N2UwZmQ0MWViOWM5Yzk3ZTA3YzM2MTBlMydcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ0Zyb2cgU2t1bGwnLFxyXG4gICAgICAgIHBhdGg6ICcuL3N0YXRpYy9tb2RlbHMvZnJvZy1za3VsbC5vYmonLFxyXG4gICAgICAgIG9yaWdpbjogJ2h0dHBzOi8vc2tldGNoZmFiLmNvbS8zZC1tb2RlbHMvZnJvZy1za3VsbC05YzQ5MWQ0NWM3M2U0OWRmOGNkNDI3N2QzZGM0NGFkZSdcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ1B5dGhvbiBTa3VsbCcsXHJcbiAgICAgICAgcGF0aDogJy4vc3RhdGljL21vZGVscy9weXRob24tc2t1bGwub2JqJyxcclxuICAgICAgICBvcmlnaW46ICdodHRwczovL3d3dy50aW5rZXJjYWQuY29tL3RoaW5ncy9hVG9nUmVrRXJwcy1weXRob24tc2t1bGwtZm9yLWRyLWNsb3NlJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAnRG9scGhpbiBTa3VsbCcsXHJcbiAgICAgICAgcGF0aDogJy4vc3RhdGljL21vZGVscy9kb2xwaGluLXNrdWxsLm9iaicsXHJcbiAgICAgICAgb3JpZ2luOiAnaHR0cHM6Ly9za2V0Y2hmYWIuY29tL2dlb2ZmcmV5bWFyY2hhbCdcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ0h1bWFuIFNrdWxsJyxcclxuICAgICAgICBwYXRoOiAnLi9zdGF0aWMvbW9kZWxzL2h1bWFuLXNrdWxsLm9iaicsXHJcbiAgICAgICAgb3JpZ2luOiAnaHR0cHM6Ly9za2V0Y2hmYWIuY29tL21hcnRpbmphcmlvJ1xyXG4gICAgfVxyXG5dO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbW9kZWxzO1xyXG4iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFxuICAgIFwiYS1zcGluXCIsXG4gICAge1xuICAgICAgc3RhdGljQ2xhc3M6IFwibW9kZWwtdmlld2VyXCIsXG4gICAgICBzdHlsZTogeyB3aWR0aDogX3ZtLndpZHRoICsgXCJweFwiLCBoZWlnaHQ6IF92bS5oZWlnaHQgKyBcInB4XCIgfSxcbiAgICAgIGF0dHJzOiB7IHNwaW5uaW5nOiBfdm0ubG9hZGluZyB9XG4gICAgfSxcbiAgICBbXG4gICAgICBfYyhcImNhbnZhc1wiLCB7XG4gICAgICAgIHJlZjogXCJjYW52YXNcIixcbiAgICAgICAgYXR0cnM6IHsgd2lkdGg6IF92bS53aWR0aCwgaGVpZ2h0OiBfdm0uaGVpZ2h0IH0sXG4gICAgICAgIG9uOiB7XG4gICAgICAgICAgY29udGV4dG1lbnU6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgICB9LFxuICAgICAgICAgIG1vdXNlZG93bjogX3ZtLmRyYWdTdGFydCxcbiAgICAgICAgICBtb3VzZW1vdmU6IF92bS5kcmFnTW92ZSxcbiAgICAgICAgICBtb3VzZXdoZWVsOiBfdm0ubW91c2VXaGVlbCxcbiAgICAgICAgICBcIiZ0b3VjaHN0YXJ0XCI6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIF92bS5kcmFnU3RhcnQoJGV2ZW50KVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCImdG91Y2htb3ZlXCI6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIF92bS5kcmFnTW92ZSgkZXZlbnQpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfdm0uX3QoXCJkZWZhdWx0XCIpXG4gICAgXSxcbiAgICAyXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcclxuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnXHJcbmltcG9ydCB7T0JKTG9hZGVyfSBmcm9tICd0aHJlZS9leGFtcGxlcy9qc20vbG9hZGVycy9PQkpMb2FkZXInXHJcblxyXG5jb25zdCBERUdfMl9SQUQgPSAxIC8gMTgwICogTWF0aC5QSTtcclxuY29uc3QgWk9PTV9NQVggPSAyMDtcclxuY29uc3QgRlBTID0gMjU7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb2RlbFZpZXdlciBleHRlbmRzIFZ1ZS5leHRlbmQoe1xyXG4gICAgcHJvcHM6IHtcclxuICAgICAgICB3aWR0aDoge1xyXG4gICAgICAgICAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IDQyMFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaGVpZ2h0OiB7XHJcbiAgICAgICAgICAgIHR5cGU6IE51bWJlcixcclxuICAgICAgICAgICAgZGVmYXVsdDogNDIwXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwcmVmZXJTaXplOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IE51bWJlcixcclxuICAgICAgICAgICAgZGVmYXVsdDogNi41XHJcbiAgICAgICAgfSxcclxuICAgICAgICB6b29tOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IE51bWJlclxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcm90YXRlWDoge1xyXG4gICAgICAgICAgICB0eXBlOiBOdW1iZXJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJvdGF0ZVk6IHtcclxuICAgICAgICAgICAgdHlwZTogTnVtYmVyXHJcbiAgICAgICAgfSxcclxuICAgICAgICByb3RhdGVaOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IE51bWJlclxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2xlYXJDb2xvcjoge1xyXG4gICAgICAgICAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IDB4ZjJmMmYyXHJcbiAgICAgICAgfSxcclxuICAgICAgICBtb2RlbFVybDogU3RyaW5nXHJcbiAgICB9LFxyXG4gICAgd2F0Y2g6IHtcclxuICAgICAgICBtb2RlbFVybCgpIHtcclxuICAgICAgICAgICAgdGhpcy5sb2FkTW9kZWwoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJvdGF0ZVgodmFsKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG1vZGVsVmlld2VyID0gdGhpcyBhcyBNb2RlbFZpZXdlcjtcclxuICAgICAgICAgICAgY29uc3QgbW9kZWwgPSBtb2RlbFZpZXdlci5tb2RlbDtcclxuICAgICAgICAgICAgaWYgKG1vZGVsKSB7XHJcbiAgICAgICAgICAgICAgICBtb2RlbC5yb3RhdGlvbi54ID0gdmFsICogREVHXzJfUkFEO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICByb3RhdGVZKHZhbCkge1xyXG4gICAgICAgICAgICBjb25zdCBtb2RlbFZpZXdlciA9IHRoaXMgYXMgTW9kZWxWaWV3ZXI7XHJcbiAgICAgICAgICAgIGNvbnN0IG1vZGVsID0gbW9kZWxWaWV3ZXIubW9kZWw7XHJcbiAgICAgICAgICAgIGlmIChtb2RlbCkge1xyXG4gICAgICAgICAgICAgICAgbW9kZWwucm90YXRpb24ueSA9IHZhbCAqIERFR18yX1JBRDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcm90YXRlWih2YWwpIHtcclxuICAgICAgICAgICAgY29uc3QgbW9kZWxWaWV3ZXIgPSB0aGlzIGFzIE1vZGVsVmlld2VyO1xyXG4gICAgICAgICAgICBjb25zdCBtb2RlbCA9IG1vZGVsVmlld2VyLm1vZGVsO1xyXG4gICAgICAgICAgICBpZiAobW9kZWwpIHtcclxuICAgICAgICAgICAgICAgIG1vZGVsLnJvdGF0aW9uLnogPSB2YWwgKiBERUdfMl9SQUQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHpvb20odmFsKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG1vZGVsVmlld2VyID0gdGhpcyBhcyBNb2RlbFZpZXdlcjtcclxuICAgICAgICAgICAgY29uc3QgY2FtZXJhID0gbW9kZWxWaWV3ZXIuY2FtZXJhO1xyXG4gICAgICAgICAgICBpZiAoY2FtZXJhKSB7XHJcbiAgICAgICAgICAgICAgICBjYW1lcmEucG9zaXRpb24ueiA9IFpPT01fTUFYIC0gdmFsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGRhdGEoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsXHJcbiAgICAgICAgICAgIGRyYWdnaW5nOiBmYWxzZSxcclxuICAgICAgICAgICAgZHJhZ1N0YXJ0WDogMCxcclxuICAgICAgICAgICAgZHJhZ1N0YXJ0WTogMFxyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgbW91bnRlZCgpOiB2b2lkIHtcclxuICAgICAgICBjb25zdCBtb2RlbFZpZXdlciA9IHRoaXMgYXMgTW9kZWxWaWV3ZXI7XHJcbiAgICAgICAgY29uc3QgcmVuZGVyZXIgPSBtb2RlbFZpZXdlci5yZW5kZXJlciA9IG5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKHtcclxuICAgICAgICAgICAgY2FudmFzOiB0aGlzLiRyZWZzLmNhbnZhcyBhcyBIVE1MQ2FudmFzRWxlbWVudFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJlbmRlcmVyLnNldENsZWFyQ29sb3IodGhpcy5jbGVhckNvbG9yKTtcclxuXHJcbiAgICAgICAgY29uc3Qgc2NlbmUgPSBtb2RlbFZpZXdlci5zY2VuZSA9IG5ldyBUSFJFRS5TY2VuZSgpO1xyXG5cclxuICAgICAgICBjb25zdCBjYW1lcmEgPSBtb2RlbFZpZXdlci5jYW1lcmEgPSBuZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoNDUsIHRoaXMud2lkdGggLyB0aGlzLmhlaWdodCk7XHJcbiAgICAgICAgY2FtZXJhLnBvc2l0aW9uLnNldCgwLCAwLCBaT09NX01BWCAtIHRoaXMuem9vbSk7XHJcbiAgICAgICAgY2FtZXJhLmxvb2tBdChuZXcgVEhSRUUuVmVjdG9yMygwLCAwLCAwKSk7XHJcbiAgICAgICAgc2NlbmUuYWRkKGNhbWVyYSk7XHJcblxyXG4gICAgICAgIGNvbnN0IGxpZ2h0ID0gbmV3IFRIUkVFLkRpcmVjdGlvbmFsTGlnaHQoMHhmZmZmZmYpO1xyXG4gICAgICAgIGxpZ2h0LnBvc2l0aW9uLnNldCgwLCA1LCA1KTtcclxuICAgICAgICBzY2VuZS5hZGQobGlnaHQpO1xyXG5cclxuICAgICAgICBjb25zdCBpaWQgPSBzZXRJbnRlcnZhbCh0aGlzLnJlbmRlciwgMTAwMCAvIEZQUyk7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLmRyYWdTdG9wKTtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLmRyYWdTdG9wKTtcclxuICAgICAgICB0aGlzLiRvbignaG9vazpiZWZvcmVEZXN0cm95JywgKCkgPT4ge1xyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKGlpZCk7XHJcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5kcmFnU3RvcCk7XHJcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMuZHJhZ1N0b3ApO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBtb2RlbFZpZXdlci5sb2FkZXIgPSBuZXcgT0JKTG9hZGVyKCk7XHJcbiAgICAgICAgaWYgKHRoaXMubW9kZWxVcmwpIHtcclxuICAgICAgICAgICAgdGhpcy5sb2FkTW9kZWwoKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIGxvYWRPQkoodXJsOiBzdHJpbmcpOiBQcm9taXNlPFRIUkVFLkdyb3VwPiB7XHJcbiAgICAgICAgICAgIGNvbnN0IG1vZGVsVmlld2VyID0gdGhpcyBhcyBNb2RlbFZpZXdlcjtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghbW9kZWxWaWV3ZXIubG9hZGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOb3QgaW5pdGlhbGl6ZWQnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG1vZGVsVmlld2VyLmxvYWRlci5sb2FkKFxyXG4gICAgICAgICAgICAgICAgICAgIHVybCxcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlLFxyXG4gICAgICAgICAgICAgICAgICAgIHVuZGVmaW5lZCxcclxuICAgICAgICAgICAgICAgICAgICByZWplY3RcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYXN5bmMgbG9hZE1vZGVsKCkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGdyb3VwID0gYXdhaXQgdGhpcy5sb2FkT0JKKHRoaXMubW9kZWxVcmwpO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IG1vZGVsVmlld2VyID0gdGhpcyBhcyBNb2RlbFZpZXdlcjtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyByZW1vdmUgZXhpc3RlZFxyXG4gICAgICAgICAgICAgICAgaWYgKG1vZGVsVmlld2VyLm1vZGVsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbW9kZWxWaWV3ZXIuc2NlbmUhLnJlbW92ZShtb2RlbFZpZXdlci5tb2RlbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbW9kZWxWaWV3ZXIubW9kZWwgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgLy8gZG91YmxlIHNpZGUgbWF0ZXJpYWxcclxuICAgICAgICAgICAgICAgIGdyb3VwLnRyYXZlcnNlKChvYmopID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAob2JqIGluc3RhbmNlb2YgVEhSRUUuTWVzaCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtYXRlcmlhbCA9IChvYmogYXMgVEhSRUUuTWVzaCkubWF0ZXJpYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRlcmlhbCBpbnN0YW5jZW9mIFRIUkVFLk1hdGVyaWFsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRlcmlhbC5zaWRlID0gVEhSRUUuRG91YmxlU2lkZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdGVyaWFsLmZvckVhY2gobWF0ZXJpYWwgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdGVyaWFsLnNpZGUgPSBUSFJFRS5Eb3VibGVTaWRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBjZW50ZXJcclxuICAgICAgICAgICAgICAgIGNvbnN0IG1lc2ggPSBncm91cC5jaGlsZHJlblswXTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGJveCA9IG5ldyBUSFJFRS5Cb3gzKCkuc2V0RnJvbU9iamVjdChncm91cCk7XHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3QgY2VudGVyID0gbmV3IFRIUkVFLlZlY3RvcjMoKTtcclxuICAgICAgICAgICAgICAgIGJveC5nZXRDZW50ZXIoY2VudGVyKTtcclxuICAgICAgICAgICAgICAgIG1lc2gucG9zaXRpb24uc2V0KC1jZW50ZXIueCwgLWNlbnRlci55LCAtY2VudGVyLnopO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIHJlc2l6ZVxyXG4gICAgICAgICAgICAgICAgY29uc3Qgc2l6ZSA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XHJcbiAgICAgICAgICAgICAgICBib3guZ2V0U2l6ZShzaXplKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHNjYWxlID0gdGhpcy5wcmVmZXJTaXplIC8gTWF0aC5tYXgoc2l6ZS54LCBzaXplLnksIHNpemUueik7XHJcbiAgICAgICAgICAgICAgICBtZXNoLnNjYWxlLnNldChzY2FsZSwgc2NhbGUsIHNjYWxlKTtcclxuXHJcbiAgICAgICAgICAgICAgICBncm91cC5yb3RhdGlvbi5zZXQodGhpcy5yb3RhdGVYICogREVHXzJfUkFELCB0aGlzLnJvdGF0ZVkgKiBERUdfMl9SQUQsIHRoaXMucm90YXRlWiAqIERFR18yX1JBRCk7XHJcblxyXG4gICAgICAgICAgICAgICAgbW9kZWxWaWV3ZXIubW9kZWwgPSBncm91cDtcclxuICAgICAgICAgICAgICAgIG1vZGVsVmlld2VyLnNjZW5lIS5hZGQoZ3JvdXApO1xyXG4gICAgICAgICAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlbmRlcigpIHtcclxuICAgICAgICAgICAgY29uc3QgbW9kZWxWaWV3ZXIgPSB0aGlzIGFzIE1vZGVsVmlld2VyO1xyXG4gICAgICAgICAgICBtb2RlbFZpZXdlci5yZW5kZXJlciEucmVuZGVyKG1vZGVsVmlld2VyLnNjZW5lISwgbW9kZWxWaWV3ZXIuY2FtZXJhISk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkcmFnU3RhcnQoZTogTW91c2VFdmVudCAmIFRvdWNoRXZlbnQpIHtcclxuICAgICAgICAgICAgdGhpcy5kcmFnZ2luZyA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuZHJhZ1N0YXJ0WCA9IGUuY2xpZW50WCB8fCBlLnRvdWNoZXMgJiYgZS50b3VjaGVzWzBdLmNsaWVudFg7XHJcbiAgICAgICAgICAgIHRoaXMuZHJhZ1N0YXJ0WSA9IGUuY2xpZW50WSB8fCBlLnRvdWNoZXMgJiYgZS50b3VjaGVzWzBdLmNsaWVudFk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkcmFnU3RvcCgpIHtcclxuICAgICAgICAgICAgdGhpcy5kcmFnZ2luZyA9IGZhbHNlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZHJhZ01vdmUoZTogTW91c2VFdmVudCAmIFRvdWNoRXZlbnQpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLmRyYWdnaW5nKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3QgeDAgPSB0aGlzLmRyYWdTdGFydFgsXHJcbiAgICAgICAgICAgICAgICB5MCA9IHRoaXMuZHJhZ1N0YXJ0WSxcclxuICAgICAgICAgICAgICAgIHgxID0gZS5jbGllbnRYIHx8IGUudG91Y2hlcyAmJiBlLnRvdWNoZXNbMF0uY2xpZW50WCxcclxuICAgICAgICAgICAgICAgIHkxID0gZS5jbGllbnRZIHx8IGUudG91Y2hlcyAmJiBlLnRvdWNoZXNbMF0uY2xpZW50WSxcclxuICAgICAgICAgICAgICAgIGR4ID0geDEgLSB4MCxcclxuICAgICAgICAgICAgICAgIGR5ID0geTEgLSB5MDtcclxuICAgICAgICAgICAgbGV0IHJvdGF0ZVggPSB0aGlzLnJvdGF0ZVgsXHJcbiAgICAgICAgICAgICAgICByb3RhdGVZID0gdGhpcy5yb3RhdGVZO1xyXG4gICAgICAgICAgICB0aGlzLmRyYWdTdGFydFggPSB4MTtcclxuICAgICAgICAgICAgdGhpcy5kcmFnU3RhcnRZID0geTE7XHJcbiAgICAgICAgICAgIHJvdGF0ZVggKz0gZHk7XHJcbiAgICAgICAgICAgIGlmIChyb3RhdGVYIDwgLTE4MCkge1xyXG4gICAgICAgICAgICAgICAgcm90YXRlWCArPSAzNjA7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocm90YXRlWCA+IDE4MCkge1xyXG4gICAgICAgICAgICAgICAgcm90YXRlWCAtPSAzNjA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcm90YXRlWSArPSBkeDtcclxuICAgICAgICAgICAgaWYgKHJvdGF0ZVkgPCAtMTgwKSB7XHJcbiAgICAgICAgICAgICAgICByb3RhdGVZICs9IDM2MDtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChyb3RhdGVZID4gMTgwKSB7XHJcbiAgICAgICAgICAgICAgICByb3RhdGVZIC09IDM2MDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6cm90YXRlWCcsIHJvdGF0ZVggfCAwKTtcclxuICAgICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnJvdGF0ZVknLCByb3RhdGVZIHwgMCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBtb3VzZVdoZWVsKGU6IFdoZWVsRXZlbnQpIHtcclxuICAgICAgICAgICAgY29uc3QgZGVsdGEgPSBNYXRoLm1heCgtMSwgTWF0aC5taW4oMSwgLWUuZGVsdGFZKSk7XHJcbiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTp6b29tJywgTWF0aC5taW4oWk9PTV9NQVgsIE1hdGgubWF4KDAsIHRoaXMuem9vbSAtIGRlbHRhKSkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSkge1xyXG4gICAgcmVuZGVyZXI/OiBUSFJFRS5XZWJHTFJlbmRlcmVyO1xyXG4gICAgc2NlbmU/OiBUSFJFRS5TY2VuZTtcclxuICAgIGNhbWVyYT86IFRIUkVFLkNhbWVyYTtcclxuICAgIGxvYWRlcj86IE9CSkxvYWRlcjtcclxuICAgIG1vZGVsPzogVEhSRUUuR3JvdXA7XHJcbn1cclxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvdHMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTEhLi9Nb2RlbFZpZXdlci50cz92dWUmdHlwZT1zY3JpcHQmbGFuZz10cyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvdHMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTEhLi9Nb2RlbFZpZXdlci50cz92dWUmdHlwZT1zY3JpcHQmbGFuZz10cyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vTW9kZWxWaWV3ZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTRlZjdjZjFiJnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL01vZGVsVmlld2VyLnRzP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPXRzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9Nb2RlbFZpZXdlci50cz92dWUmdHlwZT1zY3JpcHQmbGFuZz10cyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9Nb2RlbFZpZXdlci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00ZWY3Y2YxYiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjRlZjdjZjFiXCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiRTpcXFxcZ2l0X3dvcmtzcGFjZVxcXFxzZWFyY2gtcGhvdG9zLWJ5LW1vZGVsLXRvb2xcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnNGVmN2NmMWInKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnNGVmN2NmMWInLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnNGVmN2NmMWInLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL01vZGVsVmlld2VyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00ZWY3Y2YxYiZzY29wZWQ9dHJ1ZSZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCc0ZWY3Y2YxYicsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL2NvbXBvbmVudHMvTW9kZWxWaWV3ZXIudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9JbWFnZVRodW1iLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTNlMjI4NDJhJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiYzg4ZWExYTZcIiwgY29udGVudCwgZmFsc2UsIHt9KTtcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcbiAvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuIGlmKCFjb250ZW50LmxvY2Fscykge1xuICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9JbWFnZVRodW1iLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTNlMjI4NDJhJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiwgZnVuY3Rpb24oKSB7XG4gICAgIHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0ltYWdlVGh1bWIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9M2UyMjg0MmEmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbiAgICAgaWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG4gICAgIHVwZGF0ZShuZXdDb250ZW50KTtcbiAgIH0pO1xuIH1cbiAvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG4gbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9JbWFnZVZpZXdlci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD01NTY3ZTZjZCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjEyYzExYWZmXCIsIGNvbnRlbnQsIGZhbHNlLCB7fSk7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG4gLy8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3NcbiBpZighY29udGVudC5sb2NhbHMpIHtcbiAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vSW1hZ2VWaWV3ZXIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NTU2N2U2Y2QmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbigpIHtcbiAgICAgdmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vSW1hZ2VWaWV3ZXIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NTU2N2U2Y2QmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbiAgICAgaWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG4gICAgIHVwZGF0ZShuZXdDb250ZW50KTtcbiAgIH0pO1xuIH1cbiAvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG4gbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9TZWFyY2gudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MWExZDM3M2MmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCI2MTNlM2ZlZFwiLCBjb250ZW50LCBmYWxzZSwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuIC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG4gaWYoIWNvbnRlbnQubG9jYWxzKSB7XG4gICBtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1NlYXJjaC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0xYTFkMzczYyZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uKCkge1xuICAgICB2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9TZWFyY2gudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MWExZDM3M2MmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbiAgICAgaWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG4gICAgIHVwZGF0ZShuZXdDb250ZW50KTtcbiAgIH0pO1xuIH1cbiAvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG4gbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0ltYWdlVGh1bWIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9M2UyMjg0MmEmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi50aHVtYltkYXRhLXYtM2UyMjg0MmFde2Rpc3BsYXk6aW5saW5lLWJsb2NrfS50aHVtYiAudGh1bWItaW5uZXItd3JhcHBlcltkYXRhLXYtM2UyMjg0MmFde3Bvc2l0aW9uOnJlbGF0aXZlO2JhY2tncm91bmQtY29sb3I6I2YyZjJmMjtvdmVyZmxvdzpoaWRkZW59LnRodW1iIC50aHVtYi1pbm5lci13cmFwcGVyLmZsaXBbZGF0YS12LTNlMjI4NDJhXXt0cmFuc2Zvcm06c2NhbGUoLTEsIDEpO3RyYW5zZm9ybS1vcmlnaW46NTAlIDUwJX0udGh1bWIgLnRodW1iLWlubmVyLXdyYXBwZXIgaW1nW2RhdGEtdi0zZTIyODQyYV17cG9zaXRpb246YWJzb2x1dGV9XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9JbWFnZVZpZXdlci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD01NTY3ZTZjZCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmltYWdlLXZpZXdlci1tYXNrW2RhdGEtdi01NTY3ZTZjZF17cG9zaXRpb246Zml4ZWQ7ei1pbmRleDoxMDAwO2xlZnQ6MDt0b3A6MDttYXgtd2lkdGg6MDttYXgtaGVpZ2h0OjB9LmltYWdlLXZpZXdlci1tYXNrIC5pbWFnZS12aWV3ZXJbZGF0YS12LTU1NjdlNmNkXXtwb3NpdGlvbjpmaXhlZDt6LWluZGV4OjEwMDA7bGVmdDowO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuMzUpO292ZXJmbG93OmhpZGRlbn0uaW1hZ2Utdmlld2VyLW1hc2sgLmltYWdlLXZpZXdlciBpbWdbZGF0YS12LTU1NjdlNmNkXXtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjUwJTt0b3A6NTAlO3RyYW5zZm9ybS1vcmlnaW46NTAlIDUwJX0uaW1hZ2Utdmlld2VyLW1hc2sgLmltYWdlLXZpZXdlciAuZmxpY2tyLWxpbmtbZGF0YS12LTU1NjdlNmNkXXtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTt0b3A6OHB4O3JpZ2h0OjQ4cHg7Y29sb3I6I2ZmZjtsaW5lLWhlaWdodDoyNHB4fS5pbWFnZS12aWV3ZXItbWFzayAuaW1hZ2Utdmlld2VyIC5mbGlja3ItbGlua1tkYXRhLXYtNTU2N2U2Y2RdOmhvdmVye3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9LmltYWdlLXZpZXdlci1tYXNrIC5pbWFnZS12aWV3ZXIgLmJ0bi1jbG9zZVtkYXRhLXYtNTU2N2U2Y2Rde3Bvc2l0aW9uOmFic29sdXRlO3RvcDo4cHg7cmlnaHQ6OHB4O3otaW5kZXg6MTtjdXJzb3I6cG9pbnRlcjtmb250LXNpemU6MTZweDtjb2xvcjojZmZmO3dpZHRoOjI0cHg7aGVpZ2h0OjI0cHg7bGluZS1oZWlnaHQ6MjRweDt0ZXh0LWFsaWduOmNlbnRlcjt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7Ym9yZGVyLXJhZGl1czoxMDAlO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjM1KX0uaW1hZ2Utdmlld2VyLW1hc2sgLmltYWdlLXZpZXdlciAuYnRuLXNvdXJjZVtkYXRhLXYtNTU2N2U2Y2Rde3Bvc2l0aW9uOmFic29sdXRlO3RvcDo4cHg7cmlnaHQ6NDBweH1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1NlYXJjaC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0xYTFkMzczYyZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLndyYXBwZXJbZGF0YS12LTFhMWQzNzNjXXtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6ZmxleC1zdGFydDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2JveC1zaXppbmc6Ym9yZGVyLWJveDtwYWRkaW5nOjEwcHh9LndyYXBwZXIgLmNvbHVtbltkYXRhLXYtMWExZDM3M2Nde2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW59LndyYXBwZXIgLmNvbHVtbltkYXRhLXYtMWExZDM3M2NdOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLXJpZ2h0OjEwcHh9LndyYXBwZXIgLmNvbHVtbiAucm93W2RhdGEtdi0xYTFkMzczY117ZGlzcGxheTpmbGV4O3dpZHRoOjEwMCU7YWxpZ24taXRlbXM6Y2VudGVyfS53cmFwcGVyIC5jb2x1bW4gLnJvd1tkYXRhLXYtMWExZDM3M2NdOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbTouNWVtfS53cmFwcGVyIC5jb2x1bW4gLnJvdz4qW2RhdGEtdi0xYTFkMzczY106bm90KDpsYXN0LWNoaWxkKXttaW4td2lkdGg6MDttYXJnaW4tcmlnaHQ6LjVlbX0ud3JhcHBlciAuY29sdW1uLmNvbmRpdGlvbltkYXRhLXYtMWExZDM3M2Nde2ZsZXg6MCAwIDM2MHB4O3dpZHRoOjM2MHB4fS53cmFwcGVyIC5jb2x1bW4uY29uZGl0aW9uIC5pbm5lci13cmFwcGVyW2RhdGEtdi0xYTFkMzczY117ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4OjEgMTttaW4taGVpZ2h0OjA7d2lkdGg6MTAwJX0ud3JhcHBlciAuY29sdW1uLmNvbmRpdGlvbiAuY29sbGFwc2UtaGFuZGxlcltkYXRhLXYtMWExZDM3M2Nde2Rpc3BsYXk6bm9uZX0ud3JhcHBlciAuY29sdW1uLnJlc3VsdFtkYXRhLXYtMWExZDM3M2Nde2ZsZXg6MSAxO21pbi13aWR0aDowO2hlaWdodDoxMDAlfS53cmFwcGVyIC5jb2x1bW4ucmVzdWx0IC5saXN0W2RhdGEtdi0xYTFkMzczY117d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtvdmVyZmxvdy15OnNjcm9sbDtib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym9yZGVyOjFweCBzb2xpZCAjZDlkOWQ5O2JvcmRlci1yYWRpdXM6NHB4O3BhZGRpbmc6MTBweH0ud3JhcHBlciAuY29sdW1uLnJlc3VsdCAubGlzdCAuaXRlbVtkYXRhLXYtMWExZDM3M2Nde21hcmdpbjo1cHg7Y3Vyc29yOnpvb20taW59QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpey53cmFwcGVyW2RhdGEtdi0xYTFkMzczY117ZGlzcGxheTpibG9jayAhaW1wb3J0YW50O292ZXJmbG93OmhpZGRlbjtwb3NpdGlvbjpyZWxhdGl2ZTtib3gtc2l6aW5nOmJvcmRlci1ib3g7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwYWRkaW5nOjAgIWltcG9ydGFudH0ud3JhcHBlciAuY29sdW1uLmNvbmRpdGlvbltkYXRhLXYtMWExZDM3M2Nde3Bvc2l0aW9uOmZpeGVkO2xlZnQ6MDt0b3A6MDt6LWluZGV4OjE7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtib3gtc2l6aW5nOmJvcmRlci1ib3g7YmFja2dyb3VuZC1jb2xvcjojZmZmO292ZXJmbG93OmF1dG87dHJhbnNpdGlvbjpoZWlnaHQgLjNzfS53cmFwcGVyIC5jb2x1bW4uY29uZGl0aW9uIC5pbm5lci13cmFwcGVyW2RhdGEtdi0xYTFkMzczY117d2lkdGg6MzYwcHg7bWFyZ2luOjAgYXV0bztwYWRkaW5nOjEwcHggMH0ud3JhcHBlciAuY29sdW1uLmNvbmRpdGlvbiAuY29sbGFwc2UtaGFuZGxlcltkYXRhLXYtMWExZDM3M2Nde2Rpc3BsYXk6YmxvY2sgIWltcG9ydGFudDtwb3NpdGlvbjpmaXhlZDtsZWZ0OjUwJTt0b3A6MTAwJTt3aWR0aDo0OHB4O2hlaWdodDo0OHB4O21hcmdpbjotMjRweCAwIDAgLTI0cHg7Ym9yZGVyLXJhZGl1czoxMDAlO292ZXJmbG93OmhpZGRlbjtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC4yKTtjb2xvcjojZmZmO2ZvbnQtc2l6ZToyMHB4O3RleHQtYWxpZ246Y2VudGVyfS53cmFwcGVyIC5jb2x1bW4uY29uZGl0aW9uIC5jb2xsYXBzZS1oYW5kbGVyIC5pY29uW2RhdGEtdi0xYTFkMzczY117d2lkdGg6NDhweH0ud3JhcHBlciAuY29sdW1uLmNvbmRpdGlvbi5jb2xsYXBzZWRbZGF0YS12LTFhMWQzNzNjXXtoZWlnaHQ6MCAhaW1wb3J0YW50fS53cmFwcGVyIC5jb2x1bW4uY29uZGl0aW9uLmNvbGxhcHNlZCAuY29sbGFwc2UtaGFuZGxlcltkYXRhLXYtMWExZDM3M2Nde3RvcDowICFpbXBvcnRhbnR9LndyYXBwZXIgLmNvbHVtbi5jb25kaXRpb24uY29sbGFwc2VkIC5jb2xsYXBzZS1oYW5kbGVyIC5pY29uW2RhdGEtdi0xYTFkMzczY117dHJhbnNmb3JtLW9yaWdpbjo1MCUgNTAlO3RyYW5zZm9ybTpyb3RhdGUoMTgwZGVnKTttYXJnaW4tdG9wOjI0cHh9fVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iXSwic291cmNlUm9vdCI6IiJ9