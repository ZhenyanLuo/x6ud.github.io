{"version":3,"file":"DbManager.e6ed0c49.js","sources":["../../node_modules/@vicons/antd/es/SaveOutlined.js","../../src/DbManager/DbManager.ts?vue&type=script&src&lang.ts"],"sourcesContent":["import { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, defineComponent } from 'vue'\nconst _hoisted_1 = {\n  xmlns: 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  viewBox: '0 0 1024 1024'\n}\nconst _hoisted_2 = /*#__PURE__*/ _createVNode(\n  'path',\n  {\n    d: 'M893.3 293.3L730.7 130.7c-7.5-7.5-16.7-13-26.7-16V112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 184h256v104H384V184zm456 656H184V184h136v136c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V205.8l136 136V840zM512 442c-79.5 0-144 64.5-144 144s64.5 144 144 144s144-64.5 144-144s-64.5-144-144-144zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80s80 35.8 80 80s-35.8 80-80 80z',\n    fill: 'currentColor'\n  },\n  null,\n  -1\n  /* HOISTED */\n)\nexport default defineComponent({\n  name: 'SaveOutlined',\n  render: function render(_ctx, _cache) {\n    return _openBlock(), _createBlock('svg', _hoisted_1, [_hoisted_2])\n  }\n})\n","import {LeftOutlined, RightOutlined, SaveOutlined} from '@vicons/antd';\r\nimport {NButton, NIcon, NInput, NRadio} from 'naive-ui';\r\nimport {computed, defineComponent, onMounted, ref} from 'vue';\r\nimport NormalizedLandmarksCanvas from '../components/NormalizedLandmarksCanvas/NormalizedLandmarksCanvas.vue';\r\nimport PhotoDatabase from '../utils/db/PhotoDatabase';\r\nimport Photo from '../utils/Photo';\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        SaveOutlined,\r\n        LeftOutlined,\r\n        RightOutlined,\r\n\r\n        NButton,\r\n        NIcon,\r\n        NInput,\r\n        NRadio,\r\n\r\n        NormalizedLandmarksCanvas,\r\n    },\r\n    setup() {\r\n        let database = new PhotoDatabase();\r\n\r\n        const dbLoading = ref(false);\r\n        const numOfRecords = ref(0);\r\n\r\n        const page = ref<Photo[]>([]);\r\n        const pageNum = ref(1);\r\n        const pageSize = ref(20);\r\n        const numOfPages = computed(function () {\r\n            return Math.ceil(numOfRecords.value / pageSize.value);\r\n        });\r\n        const photo = ref(new Photo());\r\n\r\n        onMounted(async function () {\r\n            try {\r\n                dbLoading.value = true;\r\n                await database.init();\r\n                numOfRecords.value = database.countRecords();\r\n                loadPage();\r\n            } finally {\r\n                dbLoading.value = false;\r\n            }\r\n        });\r\n\r\n        async function recreate() {\r\n            try {\r\n                database = new PhotoDatabase();\r\n                await database.init(false);\r\n                database.createTables();\r\n                numOfRecords.value = database.countRecords();\r\n            } finally {\r\n                dbLoading.value = false;\r\n            }\r\n        }\r\n\r\n        async function save() {\r\n            try {\r\n                await database.saveToFile();\r\n            } finally {\r\n                dbLoading.value = false;\r\n            }\r\n        }\r\n\r\n        function loadPage() {\r\n            page.value = database.queryPhotosPage(pageSize.value, pageNum.value);\r\n        }\r\n\r\n        function prevPage() {\r\n            pageNum.value = Math.max(pageNum.value - 1, 1);\r\n            loadPage();\r\n        }\r\n\r\n        function nextPage() {\r\n            pageNum.value = Math.min(pageNum.value + 1, numOfPages.value);\r\n            loadPage();\r\n        }\r\n\r\n        function jumpToPage() {\r\n            const num = Number(prompt('Jump to page', pageNum.value + ''));\r\n            if (!num) {\r\n                return;\r\n            }\r\n            pageNum.value = Math.max(Math.min(Number(num), numOfPages.value), 1) || 1;\r\n            loadPage();\r\n        }\r\n\r\n        function selectPhoto(item: Photo) {\r\n            photo.value = item;\r\n        }\r\n\r\n        function onPhotoGenderChange(e: InputEvent) {\r\n            const value = Number((e.target as HTMLInputElement).value);\r\n            database.updatePhotoGender(photo.value.id, value);\r\n            photo.value.gender = value;\r\n        }\r\n\r\n        return {\r\n            dbLoading,\r\n            numOfRecords,\r\n\r\n            page,\r\n            pageNum,\r\n            numOfPages,\r\n            photo,\r\n\r\n            recreate,\r\n            save,\r\n\r\n            prevPage,\r\n            nextPage,\r\n            jumpToPage,\r\n            selectPhoto,\r\n            onPhotoGenderChange,\r\n        };\r\n    }\r\n});"],"names":["_hoisted_1","_hoisted_2","_createVNode","_openBlock","_createBlock"],"mappings":"8WACA,KAAMA,GAAa,CACjB,MAAO,6BACP,cAAe,+BACf,QAAS,iBAELC,EAA2BC,EAC/B,OACA,CACE,EAAG,mbACH,KAAM,gBAER,KACA,IAGF,MAAe,EAAgB,CAC7B,KAAM,eACN,OAAQ,SAAgB,EAAM,EAAQ,CACpC,MAAOC,KAAcC,EAAa,MAAOJ,EAAY,CAACC,SCZ3C,EAAgB,CAC3B,WAAY,CACR,eACA,eACA,gBAEA,UACA,QACA,SACA,SAEA,6BAEJ,OAAQ,IACA,GAAW,GAAI,QAEb,GAAY,EAAI,IAChB,EAAe,EAAI,GAEnB,EAAO,EAAa,IACpB,EAAU,EAAI,GACd,EAAW,EAAI,IACf,EAAa,EAAS,UAAY,OAC7B,MAAK,KAAK,EAAa,MAAQ,EAAS,SAE7C,EAAQ,EAAI,GAAI,MAEZ,gBAAkB,IACpB,GACU,MAAQ,QACZ,GAAS,SACF,MAAQ,EAAS,6BAGpB,MAAQ,wBAIA,IAClB,GACW,GAAI,QACT,GAAS,KAAK,MACX,iBACI,MAAQ,EAAS,yBAEpB,MAAQ,sBAIJ,IACd,MACM,GAAS,uBAEL,MAAQ,gBAIN,GACX,MAAQ,EAAS,gBAAgB,EAAS,MAAO,EAAQ,mBAG9C,GACR,MAAQ,KAAK,IAAI,EAAQ,MAAQ,EAAG,mBAI5B,GACR,MAAQ,KAAK,IAAI,EAAQ,MAAQ,EAAG,EAAW,uBAIrC,MACZ,GAAM,OAAO,OAAO,eAAgB,EAAQ,MAAQ,KACtD,CAAC,MAGG,MAAQ,KAAK,IAAI,KAAK,IAAI,OAAO,GAAM,EAAW,OAAQ,IAAM,kBAIvD,EAAa,GACxB,MAAQ,aAGW,EAAe,MAClC,GAAQ,OAAQ,EAAE,OAA4B,SAC3C,kBAAkB,EAAM,MAAM,GAAI,KACrC,MAAM,OAAS,QAGlB,CACH,YACA,eAEA,OACA,UACA,aACA,QAEA,WACA,OAEA,WACA,WACA,aACA,cACA"}